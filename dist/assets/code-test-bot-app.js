eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"code-test-bot-app/adapters/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = DS.ActiveModelAdapter.extend({\n        host: CodeTestBotAppENV.SERVER_HOST\n    });\n  });//# sourceURL=code-test-bot-app/adapters/application.js");

;eval("define(\"code-test-bot-app/app\", \n  [\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var loadInitializers = __dependency2__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n        modulePrefix: \'code-test-bot-app\', // TODO: loaded via config\n        Resolver: Resolver,\n        ready: function() {\n            $(document).foundation();\n        }\n    });\n\n    loadInitializers(App, \'code-test-bot-app\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=code-test-bot-app/app.js");

;eval("define(\"code-test-bot-app/components/bar-chart\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Component.extend({\n    	tagName: \'svg\',\n        attributeBindings: \'width height\'.w(),\n        margin: {top: 20, right: 20, bottom: 30, left: 40},\n\n        w: function(){\n    		return this.get(\'width\') - this.get(\'margin.left\') - this.get(\'margin.right\');\n        }.property(\'width\'),\n      \n        h: function(){\n    		return this.get(\'height\') - this.get(\'margin.top\') - this.get(\'margin.bottom\');\n        }.property(\'height\'),  \n      \n        transformG: function(){\n    		return \"translate(\" + this.get(\'margin.left\') + \",\" + this.get(\'margin.top\') + \")\";\n        }.property(),\n          \n        transformX: function(){\n    		return \"translate(0,\"+ this.get(\'h\') +\")\";\n        }.property(\'h\'),   \n      	\n        draw: function(){\n    		var formatPercent = d3.format(\".0%\");\n    		var width = this.get(\'w\');\n    		var height = this.get(\'h\');\n    		var data = this.get(\'data\');\n    		Ember.Logger.info(data);\n    		var svg = d3.select(\'#\'+this.get(\'elementId\'));\n    		var x = d3.scale.ordinal().rangeRoundBands([0, width], 0.1);\n    		var y = d3.scale.linear().range([height, 0]);\n    		var xAxis = d3.svg.axis().scale(x).orient(\"bottom\");\n    		var yAxis = d3.svg.axis().scale(y).orient(\"left\").ticks(5).tickFormat(formatPercent);\n\n    		x.domain(data.map(function(d) { return d.letter; }));\n    		y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n    		svg.select(\".axis.x\").call(xAxis);\n    		svg.select(\".axis.y\").call(yAxis);\n\n    		svg.select(\".rects\").selectAll(\"rect\")\n    		.data(data)\n    		.enter().append(\"rect\")\n    		.attr(\"class\", \"bar\")\n    		.attr(\"x\", function(d) { return x(d.letter); })\n    		.attr(\"width\", x.rangeBand())\n    		.attr(\"y\", function(d) { return y(d.frequency); })\n    		.attr(\"height\", function(d) { return height - y(d.frequency); });\n        },\n      \n    	didInsertElement: function(){\n      		this.draw();\n    	}\n    });\n  });//# sourceURL=code-test-bot-app/components/bar-chart.js");

;eval("define(\"code-test-bot-app/components/modal-dialog\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Component.extend({\n        actions: {\n            close: function() {\n                this.sendAction();\n            }\n        }\n    });\n  });//# sourceURL=code-test-bot-app/components/modal-dialog.js");

;eval("define(\"code-test-bot-app/controllers/analytics/index\", \n  [\"code-test-bot-app/mixins/user-aware-controller\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var UserAwareControllerMixin = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend(UserAwareControllerMixin, {\n        content: Ember.A(CHART_DATA)\n        // sortPropertiesActive: [\'createdAtDisplay:desc\'],\n        // sortPropertiesInactive: [\'updatedAtDisplay:desc\'],\n        // sortAscending: false,\n\n        // sortedActiveSubmissions: Ember.computed.sort(\'model\', \'sortPropertiesActive\'),\n        // activeSubmissions: Ember.computed.filterBy(\'sortedActiveSubmissions\', \'active\', true),\n        // sortedInactiveSubmissions: Ember.computed.sort(\'model\', \'sortPropertiesInactive\'),\n        // inactiveSubmissions: Ember.computed.filterBy(\'sortedInactiveSubmissions\', \'active\', false),\n\n        // actions: {\n        //     confirmDelete: function(submission){\n        //        return this.send(\'openModal\', \'submission/confirm-delete\', submission);\n        //     },\n\n        //     activeSortBy: function (sortPropertiesActive) {\n        //         this.set(\'sortPropertiesActive\', [sortPropertiesActive]);\n        //     },\n\n        //     inactiveSortBy: function (sortPropertiesInactive) {\n        //         this.set(\'sortPropertiesInactive\', [sortPropertiesInactive]);\n        //     }\n        // }\n    });\n\n    var CHART_DATA = [\n        {  \"letter\":\"A\", \"frequency\":0.01492 },\n        {  \"letter\":\"B\", \"frequency\":0.08167 },\n        {  \"letter\":\"C\", \"frequency\":0.02780 },\n        {  \"letter\":\"D\", \"frequency\":0.04253 },\n        {  \"letter\":\"E\", \"frequency\":0.12702 },\n        {  \"letter\":\"F\", \"frequency\":0.02288 },\n        {  \"letter\":\"G\", \"frequency\":0.02022 },\n        {  \"letter\":\"H\", \"frequency\":0.06094 },\n        {  \"letter\":\"I\", \"frequency\":0.06973 },\n        {  \"letter\":\"J\", \"frequency\":0.00153 },\n        {  \"letter\":\"K\", \"frequency\":0.00747 }\n      ];\n  });//# sourceURL=code-test-bot-app/controllers/analytics/index.js");

;eval("define(\"code-test-bot-app/mixins/user-aware-controller\", \n  [\"code-test-bot-app/mixins/user-aware\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var UserAwareMixin = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Mixin.create(UserAwareMixin, {\n        needs: [\'application\'],\n        user: Ember.computed.alias(\'controllers.application.user\')\n    });\n  });//# sourceURL=code-test-bot-app/mixins/user-aware-controller.js");

;eval("define(\"code-test-bot-app/mixins/user-aware\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    __exports__[\"default\"] = Ember.Mixin.create({\n        user: null,\n\n        isRecruiter: function() {\n            return this.hasRole(\'Recruiter\') || this.hasRole(\'Administrator\');\n        }.property(\'user.role.name\'),\n\n        isAdmin: function() {\n            return this.hasRole(\'Administrator\');\n        }.property(\'user.role.name\'),\n\n        hasRole: function(roleName) {\n            return this.get(\'user.role.name\') === roleName;\n        }\n    });\n  });//# sourceURL=code-test-bot-app/mixins/user-aware.js");

;eval("define(\"code-test-bot-app/controllers/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Controller.extend();\n  });//# sourceURL=code-test-bot-app/controllers/application.js");

;eval("define(\"code-test-bot-app/controllers/assessment/edit\", \n  [\"code-test-bot-app/mixins/user-aware-controller\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var UserAwareControllerMixin = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend(UserAwareControllerMixin, {\n\n        ownAssessment: function(){\n            return this.get(\'user.id\') === this.get(\'assessor.id\');\n        }.property(\'ownAssessment\')[\"volatile\"](),\n        notOwnAssessment: Ember.computed.not(\'ownAssessment\')[\"volatile\"](),\n        actions: {\n            editAssessment: function() {\n                var self = this;\n                var assessment = this.get(\'content\');\n                assessment.save();\n                return assessment.save().then(function() {\n                   self.transitionToRoute(\'submission.index\', assessment.get(\'submission\'));\n                });\n\n            }\n        }\n    });\n  });//# sourceURL=code-test-bot-app/controllers/assessment/edit.js");

;eval("define(\"code-test-bot-app/controllers/assessment/index\", \n  [\"code-test-bot-app/mixins/user-aware-controller\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var UserAwareControllerMixin = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend(UserAwareControllerMixin, {\n        ownAssessment: function(){\n            return this.get(\'user.id\') === this.get(\'assessor.id\');\n        }.property(\'ownAssessment\')[\"volatile\"](),\n        assessmentCreatedRecently: function(){\n            var createdAt = this.get(\'createdAtMoment\');\n            var expiryTime = createdAt.add(\'hours\', 1);\n            var now = moment();\n            return moment(now).isBefore(expiryTime);\n        }.property(\'assessmentCreatedRecently\')[\"volatile\"](),\n        isInactive: Ember.computed.not(\'assessmentCreatedRecently\')[\"volatile\"](),\n        canEdit: Ember.computed.and(\'ownAssessment\', \'assessmentCreatedRecently\')[\"volatile\"]()\n    });\n  });//# sourceURL=code-test-bot-app/controllers/assessment/index.js");

;eval("define(\"code-test-bot-app/controllers/assessments/new\", \n  [\"code-test-bot-app/mixins/auto-saveable\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var AutoSaveable = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend(AutoSaveable, {\n        selectedLanguage: null,\n        selectedLevel: null,\n\n        isFormIncomplete: function() {\n            return Ember.isEmpty(this.get(\'score\')) || Ember.isEmpty(this.get(\'notes\'));\n        }.property(\'score\', \'notes\'),\n\n        save: function() {\n            this.get(\'content\').save();\n        },\n\n        actions: {\n            createAssessment: function() {\n                var self = this;\n                var assessment = this.get(\'content\');\n                assessment.set(\'published\', true);\n                return assessment.save().then(function() {\n                    self.transitionToRoute(\'submission.index\', assessment.get(\'submission\'));\n                });\n            }\n        }\n    });\n  });//# sourceURL=code-test-bot-app/controllers/assessments/new.js");

;eval("define(\"code-test-bot-app/mixins/auto-saveable\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    __exports__[\"default\"] = Ember.Mixin.create({\n        __bufferedProperties__: {},\n\n        autoSaveWait: 2000,\n\n        setUnknownProperty: function(key, value) {\n            this.__bufferedProperties__[key] = value;\n\n            if (this.get(\'canSave\')) {\n                this.tryAutoSave();\n            } else {\n                this.get(\'content\').one(\'isLoaded\', this, this.tryAutoSave);\n            }\n        },\n\n        tryAutoSave: function() {\n            this.get(\'content\').setProperties(this.__bufferedProperties__);\n            this.__bufferedProperties__ = {};\n            Ember.run.debounce(this, this.save, this.get(\'autoSaveWait\'));\n        },\n\n        isBusy: Ember.computed.any(\'isSaving\'),\n        canSave: Ember.computed.not(\'isBusy\')\n    });\n  });//# sourceURL=code-test-bot-app/mixins/auto-saveable.js");

;eval("define(\"code-test-bot-app/controllers/auth/login\", \n  [\"code-test-bot-app/lib/window-location-helper\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var WindowLocationHelper = __dependency1__[\"default\"];\n\n    var AuthLoginController = Ember.ObjectController.extend({\n        actions: {\n            login: function() {\n                WindowLocationHelper.setLocation(this.get(\'model.auth_uri\'));\n            }\n        }\n    });\n\n    __exports__[\"default\"] = AuthLoginController;\n  });//# sourceURL=code-test-bot-app/controllers/auth/login.js");

;eval("define(\"code-test-bot-app/lib/window-location-helper\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = (function() {\n        var helper = Ember.Object.extend();\n        helper.reopenClass({\n            setLocation: function(location) {\n                window.location = location;\n            }\n        });\n\n        return helper;\n    })();\n  });//# sourceURL=code-test-bot-app/lib/window-location-helper.js");

;eval("define(\"code-test-bot-app/controllers/menu\", \n  [\"code-test-bot-app/mixins/user-aware-controller\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var UserAwareControllerMixin = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend(UserAwareControllerMixin);\n  });//# sourceURL=code-test-bot-app/controllers/menu.js");

;eval("define(\"code-test-bot-app/controllers/secured/edit\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n        actions: {\n            save: function() {\n                var self = this;\n                self.get(\'content\').save().then(function() {\n                    self.transitionToRoute(\'/\');\n                });\n            }\n        }\n    });\n  });//# sourceURL=code-test-bot-app/controllers/secured/edit.js");

;eval("define(\"code-test-bot-app/controllers/submission/confirm-delete\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n        actions: {\n            deleteSubmission: function() {\n                var submission = this.get(\'content\');\n                submission.deleteRecord();\n                submission.save();\n                this.send(\'closeModal\');\n            }\n        }\n    });\n  });//# sourceURL=code-test-bot-app/controllers/submission/confirm-delete.js");

;eval("define(\"code-test-bot-app/controllers/submission/index\", \n  [\"code-test-bot-app/mixins/user-aware-controller\",\"code-test-bot-app/utils/math\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var UserAwareControllerMixin = __dependency1__[\"default\"];\n    var cumulativeMovingAverage = __dependency2__.cumulativeMovingAverage;\n    var roundToNearestHalf = __dependency2__.roundToNearestHalf;\n\n    __exports__[\"default\"] = Ember.ObjectController.extend(UserAwareControllerMixin, {\n        userHasPublishedAssessment: false,\n\n        assessments: function() {\n            var id = this.get(\'id\');\n            return this.store.filter(\'assessment\', { submission_id: id, include_unpublished: true }, function(assessment) {\n                return assessment.get(\'submission.id\') === id;\n            });\n        }.property(\'id\'),\n\n        publishedAssessments: Ember.computed.filterBy(\'assessments\', \'published\', true),\n        unpublishedAssessments: Ember.computed.filterBy(\'assessments\', \'published\', false),\n\n        rawAverageScore: Ember.reduceComputed(\'publishedAssessments\', {\n            initialValue: 0,\n            initialize: function(initialValue, changeMeta, instanceMeta) {\n                instanceMeta.count = 0;\n            },\n            addedItem: function(accumulatedValue, item, changeMeta, instanceMeta) {\n                var score = item.get(\'score\');\n                var avg = cumulativeMovingAverage(accumulatedValue, score, instanceMeta.count);\n                instanceMeta.count++;\n                return avg;\n            },\n            removedItem: function(accumulatedValue, item, changeMeta, instanceMeta) {\n                var score = item.get(\'score\');\n                var avg = cumulativeMovingAverage(accumulatedValue, score, instanceMeta.count, true);\n                instanceMeta.count--;\n                return avg;\n            }\n        }),\n\n        averageScore: function() {\n            return roundToNearestHalf(this.get(\'rawAverageScore\'));\n        }.property(\'rawAverageScore\'),\n\n        hasPublishedAssessments: function() {\n            return this.get(\'publishedAssessments.length\') > 0;\n        }.property(\'publishedAssessments.length\'),\n\n        isInactive: Ember.computed.not(\'active\'),\n        showCloseButton: Ember.computed.and(\'isRecruiter\', \'active\'),\n        showReportButton: Ember.computed.and(\'isRecruiter\', \'hasPublishedAssessments\'),\n        showAssessments: Ember.computed.or(\'userHasPublishedAssessment\', \'isRecruiter\', \'isInactive\'),\n        userCanCreateAssessment: Ember.computed.not(\'userHasPublishedAssessment\'),\n\n        updateUserHasAssessment: function() {\n            var assessments = this.get(\'publishedAssessments\');\n            this.set(\'userHasPublishedAssessment\', assessments.findBy(\'assessor.id\', this.get(\'user.id\')) !== undefined);\n        }.observes(\'publishedAssessments.[]\'),\n\n        newAssessmentButtonText: function() {\n            var userId = this.get(\'user.id\');\n            var assessments = this.get(\'unpublishedAssessments\');\n                if (assessments.findBy(\'assessor.id\', userId) !== undefined) {\n                    return \'Resume Assessment\';\n                } else {\n                    return \'New Assessment\';\n                }\n        }.property(\'assessments.[]\'),\n\n        actions: {\n            closeSubmission: function() {\n                var self = this;\n                var submission = this.get(\'content\');\n                submission.set(\'active\', false);\n                submission.set(\'averageScore\', this.get(\'averageScore\'));\n                submission.save().then(function() {\n                    self.transitionToRoute(\'/submissions\');\n                });\n            }\n        }\n    });\n  });//# sourceURL=code-test-bot-app/controllers/submission/index.js");

;eval("define(\"code-test-bot-app/utils/math\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    function cumulativeMovingAverage(accumulatedValue, value, count, removing) {\n        var multiple = removing ? -1 : 1;\n        return ((multiple * value) + count * accumulatedValue) / (count + multiple);\n    }\n\n    function roundToNearestHalf(value) {\n        return Math.round(value * 2) / 2;\n    }\n\n    __exports__.cumulativeMovingAverage = cumulativeMovingAverage;\n    __exports__.roundToNearestHalf = roundToNearestHalf;\n    __exports__[\"default\"] = { cumulativeMovingAverage: cumulativeMovingAverage, roundToNearestHalf: roundToNearestHalf };\n  });//# sourceURL=code-test-bot-app/utils/math.js");

;eval("define(\"code-test-bot-app/controllers/submission/report\", \n  [\"code-test-bot-app/utils/math\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* globals marked */\n\n    var cumulativeMovingAverage = __dependency1__.cumulativeMovingAverage;\n    var roundToNearestHalf = __dependency1__.roundToNearestHalf;\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n        // TODO: this is duplicated with submission/index.js\n        assessments: function() {\n            var id = this.get(\'id\');\n            return this.store.filter(\'assessment\', { submission_id: id }, function(assessment) {\n                return assessment.get(\'submission.id\') === id;\n            });\n        }.property(\'id\'),\n\n        publishedAssessments: Ember.computed.filterBy(\'assessments\', \'published\', true),\n\n        rawAverageScore: Ember.reduceComputed(\'publishedAssessments\', {\n            initialValue: 0,\n            initialize: function(initialValue, changeMeta, instanceMeta) {\n                instanceMeta.count = 0;\n            },\n            addedItem: function(accumulatedValue, item, changeMeta, instanceMeta) {\n                var score = item.get(\'score\');\n                var avg = cumulativeMovingAverage(accumulatedValue, score, instanceMeta.count);\n                instanceMeta.count++;\n                return avg;\n            },\n            removedItem: function(accumulatedValue, item, changeMeta, instanceMeta) {\n                var score = item.get(\'score\');\n                var avg = cumulativeMovingAverage(accumulatedValue, score, instanceMeta.count, true);\n                instanceMeta.count--;\n                return avg;\n            }\n        }),\n\n        averageScore: function() {\n            return roundToNearestHalf(this.get(\'rawAverageScore\'));\n        }.property(\'rawAverageScore\'),\n\n        assessors: \'\',\n        report: \'\',\n\n        updateAssessors: function() {\n            var assessments = this.get(\'publishedAssessments\');\n            var assessors = assessments.map(function(assessment) {\n                return assessment.get(\'assessor.name\') + \' (score: \' + assessment.get(\'score\') + \')\';\n            });\n            this.set(\'assessors\', assessors.join(\', \'));\n        }.observes(\'publishedAssessments.[]\'),\n\n        updateReport: function() {\n            var assessments = this.get(\'publishedAssessments\');\n            var report = assessments.reduce(function(previousValue, item, index) {\n                if (previousValue !== \'\') {\n                    previousValue += \'\\n\\n\';\n                }\n\n                return previousValue + \'##### Developer \' + (index + 1) + \' wrote:\\n\\n\' + item.get(\'notes\');\n            }, \'\');\n\n            var renderer = new marked.Renderer();\n            report = marked(report, { renderer: renderer });\n\n            this.set(\'report\', report);\n        }.observes(\'publishedAssessments.[]\')\n    });\n  });//# sourceURL=code-test-bot-app/controllers/submission/report.js");

;eval("define(\"code-test-bot-app/controllers/submissions/index\", \n  [\"code-test-bot-app/mixins/user-aware-controller\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var UserAwareControllerMixin = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend(UserAwareControllerMixin, {\n        sortPropertiesActive: [\'createdAtDisplay:desc\'],\n        sortPropertiesInactive: [\'updatedAtDisplay:desc\'],\n        sortAscending: false,\n\n        sortedActiveSubmissions: Ember.computed.sort(\'model\', \'sortPropertiesActive\'),\n        activeSubmissions: Ember.computed.filterBy(\'sortedActiveSubmissions\', \'active\', true),\n        sortedInactiveSubmissions: Ember.computed.sort(\'model\', \'sortPropertiesInactive\'),\n        inactiveSubmissions: Ember.computed.filterBy(\'sortedInactiveSubmissions\', \'active\', false),\n\n        actions: {\n            confirmDelete: function(submission){\n               return this.send(\'openModal\', \'submission/confirm-delete\', submission);\n            },\n\n            activeSortBy: function (sortPropertiesActive) {\n                this.set(\'sortPropertiesActive\', [sortPropertiesActive]);\n            },\n\n            inactiveSortBy: function (sortPropertiesInactive) {\n                this.set(\'sortPropertiesInactive\', [sortPropertiesInactive]);\n            }\n        }\n    });\n  });//# sourceURL=code-test-bot-app/controllers/submissions/index.js");

;eval("define(\"code-test-bot-app/controllers/submissions/new\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n        candidateName: null,\n        candidateEmail: null,\n        selectedLanguage: null,\n        selectedLevel: null,\n\n        isFormIncomplete: Ember.computed.or(\'isCandidateIncomplete\', \'isSubmissionIncomplete\'),\n\n        isCandidateIncomplete: function() {\n            return Ember.isEmpty(this.get(\'candidateName\')) ||\n                Ember.isEmpty(this.get(\'candidateEmail\'));\n        }.property(\'candidateName\', \'candidateEmail\'),\n\n        isSubmissionIncomplete: function() {\n            return Ember.isEmpty(this.get(\'submission.emailText\')) ||\n                Ember.isEmpty(this.get(\'submission.zipfile\'));\n        }.property(\'submission.emailText\', \'submission.zipfile\'),\n\n        findCandidate: function() {\n            return this.store.find(\'candidate\', { email: this.get(\'candidateEmail\') }).then(function(results) {\n                return results.get(\'firstObject\');\n            });\n        },\n\n        createSubmission: function() {\n            var submission = this.get(\'submission\');\n            submission.set(\'candidateName\', this.get(\'candidateName\'));\n            submission.set(\'candidateEmail\', this.get(\'candidateEmail\'));\n            submission.set(\'level\', this.get(\'selectedLevel\'));\n            submission.set(\'language\', this.get(\'selectedLanguage\'));\n            return submission.save();\n        },\n\n        actions: {\n            submit: function() {\n                var self = this;\n                self.createSubmission() .then(function() {\n                    self.transitionToRoute(\'/submissions\');\n                });\n            }\n        }\n    });\n  });//# sourceURL=code-test-bot-app/controllers/submissions/new.js");

;eval("define(\"code-test-bot-app/controllers/user\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n        editDisabled: Ember.computed.not(\'editable\')\n    });\n  });//# sourceURL=code-test-bot-app/controllers/user.js");

;eval("define(\"code-test-bot-app/controllers/user/edit\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n       \n           all_roles: function() {\n               return this.store.find(\'role\');\n           }.property(\'model.all_roles\'),\n        actions: {\n               changeRole: function() {\n                   var role = this.get(\'selectedRole\');\n                   var user = this.get(\'content\');\n                   user.set(\'role\', role);\n                   user.save();\n               }\n        }\n    });\n  });//# sourceURL=code-test-bot-app/controllers/user/edit.js");

;eval("define(\"code-test-bot-app/controllers/users/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n        itemController: \'user\'\n    });\n  });//# sourceURL=code-test-bot-app/controllers/users/index.js");

;eval("define(\"code-test-bot-app/helpers/render-marked\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* globals marked */\n\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(raw) {\n        var renderer = new marked.Renderer();\n        return new Ember.Handlebars.SafeString(marked(raw, { renderer: renderer }));\n    });\n  });//# sourceURL=code-test-bot-app/helpers/render-marked.js");

;eval("define(\"code-test-bot-app/initializers/authentication\", \n  [\"code-test-bot-app/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n\n    __exports__[\"default\"] = {\n        name: \'authentication\',\n        initialize: function(container, application) {\n            container.register(\'authenticator:out-of-band-token\', Ember.SimpleAuth.Authenticators.OutOfBandTokenAuthenticator);\n\n            var options = {\n                authorizerFactory: \'authorizer:oauth2-bearer\',\n                authenticationRoute: \'auth.login\',\n                routeAfterAuthentication: \'secured.index\',\n                crossOriginWhitelist: [CodeTestBotAppENV.SERVER_HOST]\n            };\n\n            options = Ember.merge({ storeFactory: application.get(\'storeFactory\') }, options);\n\n            Ember.SimpleAuth.setup(container, application, options);\n        }\n    };\n  });//# sourceURL=code-test-bot-app/initializers/authentication.js");

;eval("define(\"code-test-bot-app/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    Ember.SimpleAuth.Authenticators.OutOfBandTokenAuthenticator = Ember.SimpleAuth.Authenticators.Base.extend({\n        restore: function(data) {\n            return new Ember.RSVP.Promise(function(resolve, reject) {\n                if (!Ember.isEmpty(data.access_token)) {\n                    var now = (new Date()).getTime();\n                    if (!Ember.isEmpty(data.expires_at) && data.expires_at < now) {\n                        reject();\n                    } else {\n                        resolve(data);\n                    }\n                } else {\n                    reject();\n                }\n            });\n        },\n\n        authenticate: function(token_data) {\n            return new Ember.RSVP.Promise(function(resolve) {\n                Ember.run(function() {\n                    token_data.expires_at = parseInt(token_data.expires_at) * 1000;\n                    token_data.expires = token_data.expires === \'true\';\n                    resolve(token_data);\n                });\n            });\n        },\n\n        invalidate: function() {\n            // TODO: delete from server\n            return new Ember.RSVP.resolve();\n        }\n    });\n\n    __exports__[\"default\"] = Ember.SimpleAuth.Authenticators.OutOfBandTokenAuthenticator;\n  });//# sourceURL=code-test-bot-app/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator.js");

;eval("define(\"code-test-bot-app/initializers/error-reporting\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\n        name: \'error-reporting\',\n        initialize: function() {\n            Ember.onerror = function(error) {\n                Raven.captureException(error, {tags: { environment: CodeTestBotAppENV.environment }});\n            };\n        }\n    };\n  });//# sourceURL=code-test-bot-app/initializers/error-reporting.js");

;eval("define(\"code-test-bot-app/initializers/stores\", \n  [\"code-test-bot-app/lib/stores/local\",\"code-test-bot-app/lib/stores/ephemeral\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var LocalStore = __dependency1__[\"default\"];\n    var EphemeralStore = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = {\n        name: \'stores\',\n        initialize: function(container, application) {\n            container.register(\'data-store:local\', LocalStore);\n            container.register(\'data-store:ephemeral\', EphemeralStore);\n\n            var dataStore = application.get(\'dataStore\');\n            if (Ember.isEmpty(dataStore)) {\n                dataStore = \'data-store:local\';\n            }\n\n            if (typeof dataStore === \'string\') {\n                application.set(\'dataStore\', container.lookup(dataStore));\n            }\n        }\n    };\n  });//# sourceURL=code-test-bot-app/initializers/stores.js");

;eval("define(\"code-test-bot-app/lib/stores/local\", \n  [\"code-test-bot-app/lib/stores/base\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* globals localStorage */\n\n    var Base = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Base.extend({\n        getItem: function(key) {\n            return localStorage.getItem(key);\n        },\n\n        setItem: function(key, value) {\n            localStorage.setItem(key, value);\n        },\n\n        removeItem: function(key) {\n            localStorage.removeItem(key);\n        }\n    });\n  });//# sourceURL=code-test-bot-app/lib/stores/local.js");

;eval("define(\"code-test-bot-app/lib/stores/base\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Object.extend({\n        getItem: function() {\n            return null;\n        },\n\n        setItem: function() {\n        },\n\n        removeItem: function() {\n        }\n    });\n  });//# sourceURL=code-test-bot-app/lib/stores/base.js");

;eval("define(\"code-test-bot-app/lib/stores/ephemeral\", \n  [\"code-test-bot-app/lib/stores/base\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Base = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Base.extend({\n        data: {},\n\n        getItem: function(key) {\n            return this.data[key];\n        },\n\n        setItem: function(key, value) {\n            this.data[key] = value;\n        },\n\n        removeItem: function(key) {\n            delete this.data[key];\n        }\n    });\n  });//# sourceURL=code-test-bot-app/lib/stores/ephemeral.js");

;eval("define(\"code-test-bot-app/lib/auth/www-authenticate-header\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var split = String.prototype.split;\n\n    var WWWAuthenticateHeader = Ember.Object.extend({\n        rawHeader: null,\n        error: null,\n\n\n        init: function() {\n            var self = this;\n            var parts = split.call(this.get(\'rawHeader\'), \' \');\n            parts.shift();\n            parts.forEach(function(pair) {\n                pair = split.call(pair, \'=\');\n                if (pair[0] === \'error\') {\n                    self.set(\'error\', pair[1].replace(\',\', \'\'));\n                }\n            });\n        },\n\n        isEmpty: function() {\n            return Ember.isEmpty(this.get(\'error\'));\n        }.property(\'error\'),\n\n        isInvalidToken: function() {\n            return this.get(\'error\') === \'\"invalid_token\"\';\n        }.property(\'error\')\n    });\n\n    WWWAuthenticateHeader.reopenClass({\n        parse: function(xhr) {\n            return WWWAuthenticateHeader.create({ rawHeader: xhr.getResponseHeader(\'WWW-Authenticate\') });\n        }\n    });\n\n    __exports__[\"default\"] = WWWAuthenticateHeader;\n  });//# sourceURL=code-test-bot-app/lib/auth/www-authenticate-header.js");

;eval("define(\"code-test-bot-app/mixins/user-aware-route\", \n  [\"code-test-bot-app/mixins/user-aware\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var UserAwareMixin = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Mixin.create(UserAwareMixin, {\n        user: Ember.computed.alias(\'applicationController.user\'),\n\n        applicationController: function() {\n            return this.controllerFor(\'application\');\n        }.property()\n    });\n  });//# sourceURL=code-test-bot-app/mixins/user-aware-route.js");

;eval("define(\"code-test-bot-app/models/assessment\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* globals marked */\n\n    __exports__[\"default\"] = DS.Model.extend({\n        score: DS.attr(),\n        notes: DS.attr(),\n        published: DS.attr(),\n        createdAt: DS.attr(),\n        updatedAt: DS.attr(),\n        submission: DS.belongsTo(\'submission\'),\n        assessor: DS.belongsTo(\'assessor\'),\n\n        createdAtDisplay: function() {\n            return this.get(\'createdAtMoment\').format(\'l LT\');\n        }.property(\'createdAtMoment\'),\n\n        createdAtMoment: function() {\n            return moment(this.get(\'createdAt\'));\n        }.property(\'createdAt\'),\n\n        updatedAtDisplay: function() {\n            return moment(this.get(\'updatedAt\')).format(\'l LT\');\n        }.property(\'updatedAt\'),\n        \n        notesDisplay: function() {\n            var renderer = new marked.Renderer();\n            return marked(this.get(\'notes\'), { renderer: renderer });\n        }.property(\'notes\')\n    });\n  });//# sourceURL=code-test-bot-app/models/assessment.js");

;eval("define(\"code-test-bot-app/models/assessor\", \n  [\"code-test-bot-app/models/user\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var User = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = User.extend({\n        \"toString\": function() {\n            return this.get(\'name\') + \' <\' + this.get(\'email\') + \'>\';\n        }\n    });\n  });//# sourceURL=code-test-bot-app/models/assessor.js");

;eval("define(\"code-test-bot-app/models/user\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = DS.Model.extend({\n        name: DS.attr(),\n        email: DS.attr(),\n        imageUrl: DS.attr(),\n        editable: DS.attr(),\n        role: DS.belongsTo(\'role\'),\n        session: DS.hasMany(\'session\')\n    });\n  });//# sourceURL=code-test-bot-app/models/user.js");

;eval("define(\"code-test-bot-app/models/language\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = DS.Model.extend({\n        name: DS.attr(\'string\'),\n\n        submissions: DS.hasMany(\'submission\')\n    });\n  });//# sourceURL=code-test-bot-app/models/language.js");

;eval("define(\"code-test-bot-app/models/level\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = DS.Model.extend({\n        text: DS.attr(\'string\'),\n        submissions: DS.hasMany(\'submission\')\n    });\n  });//# sourceURL=code-test-bot-app/models/level.js");

;eval("define(\"code-test-bot-app/models/page\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    __exports__[\"default\"] = DS.Model.extend({\n        name: DS.attr(),\n        rawText: DS.attr()\n    });\n  });//# sourceURL=code-test-bot-app/models/page.js");

;eval("define(\"code-test-bot-app/models/role\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = DS.Model.extend({\n        name: DS.attr(),\n        users: DS.hasMany(\'user\')\n    });\n  });//# sourceURL=code-test-bot-app/models/role.js");

;eval("define(\"code-test-bot-app/models/session\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = DS.Model.extend({\n        token: DS.attr(),\n        tokenExpiry: DS.attr(),\n        user: DS.belongsTo(\'user\')\n    });\n  });//# sourceURL=code-test-bot-app/models/session.js");

;eval("define(\"code-test-bot-app/models/submission\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = DS.Model.extend({\n        candidateName: DS.attr(),\n        candidateEmail: DS.attr(),\n        emailText: DS.attr(),\n        zipfile: DS.attr(),\n        fileName: DS.attr(),\n        active: DS.attr(),\n        createdAt: DS.attr(),\n        updatedAt: DS.attr(),\n        averageScore: DS.attr(),\n\n        level: DS.belongsTo(\'level\'),\n        language: DS.belongsTo(\'language\'),\n        assessments: DS.hasMany(\'assessment\'),\n\n        candidateDisplay: function() {\n            return this.get(\'candidateName\') + \' <\' + this.get(\'candidateEmail\') + \'>\';\n        }.property(\'candidateName\', \'candidateEmail\'),\n\n        languageDisplay: function() {\n            return Ember.isNone(this.get(\'language\')) ? \'Unknown\' : this.get(\'language.name\');\n        }.property(\'language\'),\n\n        createdAtDisplay: function() {\n            return moment(this.get(\'createdAt\')).format(\'l LT\');\n        }.property(\'createdAt\'),\n        updatedAtDisplay: function() {\n            return moment(this.get(\'updatedAt\')).format(\'l LT\');\n        }.property(\'updatedAt\')\n\n    });\n  });//# sourceURL=code-test-bot-app/models/submission.js");

;eval("define(\"code-test-bot-app/router\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var Router = Ember.Router.extend({\n      location: \'auto\'\n    });\n\n    Router.map(function() {\n        this.resource(\'auth\', function() {\n            this.route(\'login\');\n            this.route(\'logout\');\n            this.route(\'complete\');\n        });\n\n        this.resource(\'secured\', { path: \'/\' }, function() {\n            this.route(\'edit\');\n\n            this.resource(\'submissions\', function() {\n                this.route(\'new\');\n\n                this.resource(\'submission\', { path: \'/:submission_id\' }, function() {\n                    this.route(\'report\');\n\n                    this.resource(\'assessments\', function() {\n                        this.route(\'new\');\n                    });\n                });\n            });\n\n            this.resource(\'analytics\', function() {\n\n            });\n\n            this.resource(\'assessments\', function() {\n                this.resource(\'assessment\', { path: \'/:assessment_id\' }, function() {\n                    this.route(\'edit\');\n                });\n            });\n            \n            this.resource(\'admin\', function() {\n                this.resource(\'users\', function() {\n                    this.resource(\'user\', { path: \'/:user_id\' }, function() {\n                        this.route(\'edit\');\n                    });\n                });\n            });\n        });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=code-test-bot-app/router.js");

;eval("define(\"code-test-bot-app/routes/admin\", \n  [\"code-test-bot-app/mixins/user-aware-route\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var UserAwareRouteMixin = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend(UserAwareRouteMixin, {\n        setupController: function(controller, model) {\n            if (!this.get(\'isAdmin\')) {\n                throw \'You must be an administrator to access this area.\';\n            }\n\n            this._super(controller, model);\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/admin.js");

;eval("define(\"code-test-bot-app/routes/analytics/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    __exports__[\"default\"] = Ember.Route.extend({\n        model: function() {\n            return this.store.find(\'submission\');\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/analytics/index.js");

;eval("define(\"code-test-bot-app/routes/application\", \n  [\"code-test-bot-app/lib/auth/www-authenticate-header\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var WWWAuthenticateHeader = __dependency1__[\"default\"];\n\n    var CONTINUE_ERROR_HANDLING = true;\n    var STOP_ERROR_HANDLING = false;\n\n    __exports__[\"default\"] = Ember.Route.extend(Ember.SimpleAuth.ApplicationRouteMixin, {\n        handleUnauthorized: function(xhr) {\n            var header = WWWAuthenticateHeader.parse(xhr);\n            if (header.get(\'isEmpty\') || header.get(\'isInvalidToken\')) {\n                this.transitionTo(\'auth.login\');\n                return STOP_ERROR_HANDLING;\n            }\n\n            return CONTINUE_ERROR_HANDLING;\n        },\n\n        renderTemplate: function(controller, model) {\n            this._super(controller, model);\n            this.render(\'menu\', {\n                into: \'application\',\n                outlet: \'menu\',\n                controller: \'menu\'\n            });\n        },\n\n        handleAjaxError: function(error) {\n            if (typeof(error) !== \'object\') {\n                return CONTINUE_ERROR_HANDLING;\n            }\n\n            var xhr = error.jqXHR ? error.jqXHR : error;\n            if (xhr && xhr[\"hasOwnProperty\"](\'status\') && xhr[\"hasOwnProperty\"](\'getResponseHeader\')) {\n                if (xhr.status === 401) {\n                    if(this.handleUnauthorized(xhr) === STOP_ERROR_HANDLING) {\n                        return STOP_ERROR_HANDLING;\n                    }\n                }\n            }\n\n            return CONTINUE_ERROR_HANDLING;\n        },\n\n        actions: {\n            error: function(error) {\n                if (this.handleAjaxError(error) === STOP_ERROR_HANDLING) {\n                    return STOP_ERROR_HANDLING;\n                }\n\n                return CONTINUE_ERROR_HANDLING;\n            },\n            unauthorized: function(jqXHR) {\n                this.handleUnauthorized(jqXHR);\n            },\n\n            openModal: function(modalName, model) {\n                this.controllerFor(modalName).set(\'model\', model);\n                return this.render(modalName, {\n                    into: \'application\',\n                    outlet: \'modal\',\n                });\n            },\n\n            closeModal: function() {\n                return this.disconnectOutlet({\n                    outlet: \'modal\',\n                    parentView: \'application\'\n                });\n            }\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/application.js");

;eval("define(\"code-test-bot-app/routes/assessments/new\", \n  [\"code-test-bot-app/mixins/user-aware-route\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var UserAwareRouteMixin = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend(UserAwareRouteMixin, {\n        model: function() {\n            var self = this;\n            var submission = self.modelFor(\'submission\');\n            var assessor = this.modelFor(\'secured\').get(\'user\');\n            return self.store.find(\'assessment\', { submission_id: submission.get(\'id\'), assessor_id: assessor.get(\'id\'), include_unpublished: true }).then(function(assessments) {\n                if (assessments.get(\'length\') === 0) {\n                    var model = self.store.createRecord(\'assessment\');\n                    model.set(\'published\', false);\n                    model.set(\'languages\', self.store.find(\'language\'));\n                    model.set(\'levels\', self.store.find(\'level\'));\n                    model.set(\'assessor\', self.store.push(\'assessor\', assessor.toJSON({ includeId: true })));\n                    return model;\n                } else {\n                    return assessments.get(\'firstObject\');\n                }\n            });\n        },\n\n        setupController: function(controller, model) {\n            this._super(controller, model);\n\n            var submission = this.controllerFor(\'submission\').get(\'model\');\n            model.set(\'submission\', submission);\n            controller.set(\'selectedLanguage\', submission.get(\'language\'));\n            controller.set(\'selectedLevel\', submission.get(\'level\'));\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/assessments/new.js");

;eval("define(\"code-test-bot-app/routes/auth/complete\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n        beforeModel: function(transition) {\n            var params = transition.queryParams;\n            var token_data = {\n                access_token: params.token,\n                expires_at: params.expires_at,\n                expires: params.expires\n            };\n\n            var self = this;\n            transition.then(function() {\n                return self.get(\'session\').authenticate(\'authenticator:out-of-band-token\', token_data).then(function() {\n                    var attemptedTransition = CodeTestBotApp.get(\'dataStore\').getItem(\'attemptedTransition\') || \'/\';\n                    CodeTestBotApp.get(\'dataStore\').removeItem(\'attemptedTransition\');\n\n                    return self.transitionTo(attemptedTransition);\n                });\n            });\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/auth/complete.js");

;eval("define(\"code-test-bot-app/routes/auth/login\", \n  [\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var request = __dependency1__.request;\n\n    __exports__[\"default\"] = Ember.Route.extend({\n        model: function() {\n            return request(CodeTestBotAppENV.NEW_SESSION_URL + \'?redirect_uri=\' + CodeTestBotAppENV.APP_HOST + \'/auth/complete\');\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/auth/login.js");

;eval("define(\"code-test-bot-app/routes/error\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n        setupController: function(controller, model) {\n            var error = model;\n            if (this._isXHR(model)) {\n                if (model.status === 403) {\n                    error = new Error(\'You do not have permission to access this page.\');\n                } else {\n                    error = new Error(\'Unhandled AJAX error \' + model.status + \' \' + model.responseText);\n                }\n            }\n\n            Ember.onerror(error);\n            controller.set(\'model\', error);\n        },\n\n        _isXHR: function(obj) {\n            if (typeof(obj) !== \'object\') {\n                return false;\n            }\n\n            return obj && obj[\"hasOwnProperty\"](\'status\') && obj[\"hasOwnProperty\"](\'getResponseHeader\');\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/error.js");

;eval("define(\"code-test-bot-app/routes/secured\", \n  [\"code-test-bot-app/routes/application\",\"code-test-bot-app/mixins/user-aware\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var ApplicationRoute = __dependency1__[\"default\"];\n    var UserAwareMixin = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = ApplicationRoute.extend(Ember.SimpleAuth.AuthenticatedRouteMixin, UserAwareMixin, {\n        beforeModel: function(transition) {\n            var session = this.get(\'session\');\n            if (!session.get(\'isAuthenticated\')) {\n                window.CodeTestBotApp.get(\'dataStore\').setItem(\'attemptedTransition\', transition.intent.url);\n                return this._super(transition);\n            }\n        },\n\n        model: function() {\n            var self = this;\n            return self.store.find(\'session\', \'current\').then(function(session) {\n                self.set(\'user\', session.get(\'user\'));\n                Raven.setUser({\n                    id: self.get(\'user.id\'),\n                    email: self.get(\'user.email\')\n                });\n                return Ember.Object.create({\n                    user: self.get(\'user\')\n                });\n            });\n        },\n\n        setupController: function(controller, model) {\n            this._super(controller, model);\n            this.controllerFor(\'application\').set(\'user\', this.get(\'user\'));\n        },\n\n        actions: {\n            authenticate: function(params) {\n                var token_data = {\n                    access_token: params.token,\n                    expires_at: params.expires_at,\n                    expires: params.expires\n                };\n\n                return this.get(\'session\').authenticate(\'authenticator:out-of-band-token\', token_data);\n            }\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/secured.js");

;eval("define(\"code-test-bot-app/routes/secured/edit\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    __exports__[\"default\"] = Ember.Route.extend({\n        model: function() {\n            return this.store.find(\'page\', \'welcome\');\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/secured/edit.js");

;eval("define(\"code-test-bot-app/routes/secured/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n        model: function() {\n            return this.store.find(\'page\', \'welcome\');\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/secured/index.js");

;eval("define(\"code-test-bot-app/routes/submissions/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    __exports__[\"default\"] = Ember.Route.extend({\n        model: function() {\n            return this.store.find(\'submission\');\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/submissions/index.js");

;eval("define(\"code-test-bot-app/routes/submissions/new\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n        model: function() {\n            return Ember.Object.create({\n                submission: this.store.createRecord(\'submission\'),\n                languages: this.store.find(\'language\'),\n                levels: this.store.find(\'level\')\n            });\n        },\n\n        actions: {\n            willTransition: function() {\n                var submission = this.controller.get(\'submission\');\n                if (submission.get(\'isNew\')) {\n                    submission.deleteRecord();\n                }\n            }\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/submissions/new.js");

;eval("define(\"code-test-bot-app/routes/users/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    __exports__[\"default\"] = Ember.Route.extend({\n        model: function() {\n            return this.store.find(\'user\');\n        }\n    });\n  });//# sourceURL=code-test-bot-app/routes/users/index.js");

;eval("define(\"code-test-bot-app/templates/analytics/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1>Code Test Analytics</h1>\\n\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers[\'bar-chart\'] || (depth0 && depth0[\'bar-chart\']),options={hash:{\n        \'width\': (300),\n        \'height\': (160),\n        \'data\': (\"content\")\n      },hashTypes:{\'width\': \"INTEGER\",\'height\': \"INTEGER\",\'data\': \"ID\"},hashContexts:{\'width\': depth0,\'height\': depth0,\'data\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bar-chart\", options))));\n      data.buffer.push(\"\\n    	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bar-chart\'] || (depth0 && depth0[\'bar-chart\']),options={hash:{\n        \'width\': (400),\n        \'height\': (200),\n        \'data\': (\"content\")\n      },hashTypes:{\'width\': \"INTEGER\",\'height\': \"INTEGER\",\'data\': \"ID\"},hashContexts:{\'width\': depth0,\'height\': depth0,\'data\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bar-chart\", options))));\n      data.buffer.push(\"\\n\\n		<g \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'transform\': (\"transformG\")\n      },hashTypes:{\'transform\': \"ID\"},hashContexts:{\'transform\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n	    	<g class=\\\"x axis\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'transform\': (\"transformX\")\n      },hashTypes:{\'transform\': \"ID\"},hashContexts:{\'transform\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></g>\\n	    	<g class=\\\"y axis\\\"><text transform=\\\"rotate(-90)\\\" y=\\\"6\\\" dy=\\\".71em\\\" style=\\\"text-anchor:end;\\\">Frequency</text></g>\\n	    	<g class=\\\"rects\\\"></g>\\n    	</g>\\n    </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/analytics/index.js");

;eval("define(\"code-test-bot-app/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"menu\", options) : helperMissing.call(depth0, \"outlet\", \"menu\", options))));\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    <section class=\\\"top-bar-section\\\">\\n        <ul class=\\\"right\\\">\\n                <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"auth.login\", options) : helperMissing.call(depth0, \"link-to\", \"auth.login\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n        </ul>\\n    </section>\\n    \");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"<i class=\\\"fa fa-sign-in\\\"></i> Login\");\n      }\n\n      data.buffer.push(\"<nav class=\\\"top-bar\\\" data-topbar>\\n    <ul class=\\\"title-area\\\">\\n        <li class=\\\"name\\\">\\n            <h1><a href=\\\"/\\\">Code Test Bot</a></h1>\\n        </li>\\n        <li class=\\\"toggle-topbar menu-icon\\\"><a href=\\\"#\\\">Menu</a></li>\\n    </ul>\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"session.isAuthenticated\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</nav>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"modal\", options) : helperMissing.call(depth0, \"outlet\", \"modal\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/application.js");

;eval("define(\"code-test-bot-app/templates/assessment/edit\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\" <p>You can\'t edit this assessment as you didn\'t create it.</p> \");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n        <fieldset>\\n            <legend>Assessment</legend>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"large-2 columns\\\">\\n                    <label>Score (0-5)\\n                        \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"score\"),\n        \'class\': (\"score\")\n      },hashTypes:{\'value\': \"ID\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"large-12 columns\\\">\\n                    <label>Notes\\n                        \");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"notes\"),\n        \'rows\': (\"6\"),\n        \'class\': (\"notes\")\n      },hashTypes:{\'value\': \"ID\",\'rows\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'rows\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"large-12 columns\\\">\\n                    <button class=\\\"button small radius success right create\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'disabled\': (\"isFormIncomplete\")\n      },hashTypes:{\'disabled\': \"ID\"},hashContexts:{\'disabled\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"editAssessment\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\">Submit</button>\\n                </div>\\n            </div>\\n        </fieldset>\\n    \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"Back to submission\");\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1>Edit Assessment</h1>\\n\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"notOwnAssessment\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"ownAssessment\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"button small radius\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"submission.index\", \"submission\", options) : helperMissing.call(depth0, \"link-to\", \"submission.index\", \"submission\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/assessment/edit.js");

;eval("define(\"code-test-bot-app/templates/assessment/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"button small radius\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"assessment.edit\", \"\", options) : helperMissing.call(depth0, \"link-to\", \"assessment.edit\", \"\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"Edit\");\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"Back to submission\");\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1>Assessment</h1>\\n\\n        <label>Assessor</label>\\n        <p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"assessor.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n\\n        <label>Score</label>\\n        <p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"score\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n\\n        <label>Notes</label>\\n        <p>\");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"notesDisplay\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</p>\\n\\n        <label>Created at</label>\\n        <p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"createdAtDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"canEdit\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"button small radius\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"submission.index\", \"submission\", options) : helperMissing.call(depth0, \"link-to\", \"submission.index\", \"submission\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/assessment/index.js");

;eval("define(\"code-test-bot-app/templates/assessments/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1>New Assessment</h1>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <fieldset>\\n            <legend>Submission</legend>\\n\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"large-6 columns\\\">\\n                    <label>Language\\n                        \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Select\", {hash:{\n        \'viewName\': (\"select\"),\n        \'contentBinding\': (\"model.languages\"),\n        \'optionLabelPath\': (\"content.name\"),\n        \'optionValuePath\': (\"content.id\"),\n        \'prompt\': (\"Select a language:\"),\n        \'selectionBinding\': (\"selectedLanguage\"),\n        \'disabled\': (\"disabled\"),\n        \'class\': (\"language\")\n      },hashTypes:{\'viewName\': \"STRING\",\'contentBinding\': \"STRING\",\'optionLabelPath\': \"STRING\",\'optionValuePath\': \"STRING\",\'prompt\': \"STRING\",\'selectionBinding\': \"STRING\",\'disabled\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'viewName\': depth0,\'contentBinding\': depth0,\'optionLabelPath\': depth0,\'optionValuePath\': depth0,\'prompt\': depth0,\'selectionBinding\': depth0,\'disabled\': depth0,\'class\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n                    </label>\\n                </div>\\n                <div class=\\\"large-6 columns\\\">\\n                    <label>Candidate Level\\n                        \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Select\", {hash:{\n        \'viewName\': (\"select\"),\n        \'contentBinding\': (\"model.levels\"),\n        \'optionLabelPath\': (\"content.text\"),\n        \'optionValuePath\': (\"content.id\"),\n        \'prompt\': (\"Select a language:\"),\n        \'selectionBinding\': (\"selectedLevel\"),\n        \'disabled\': (\"disabled\"),\n        \'class\': (\"level\")\n      },hashTypes:{\'viewName\': \"STRING\",\'contentBinding\': \"STRING\",\'optionLabelPath\': \"STRING\",\'optionValuePath\': \"STRING\",\'prompt\': \"STRING\",\'selectionBinding\': \"STRING\",\'disabled\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'viewName\': depth0,\'contentBinding\': depth0,\'optionLabelPath\': depth0,\'optionValuePath\': depth0,\'prompt\': depth0,\'selectionBinding\': depth0,\'disabled\': depth0,\'class\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"large-2 columns\\\">\\n                    <label>File\\n                        <a class=\\\"button small radius success zipfile\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"submission.zipfile\")\n      },hashTypes:{\'href\': \"ID\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"><i class=\\\"fi-download\\\"></i>&nbsp;Download</a>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"large-12 columns\\\">\\n                    <label>Email Text\\n                        \");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"submission.emailText\"),\n        \'rows\': (\"6\"),\n        \'disabled\': (\"disabled\"),\n        \'class\': (\"email-text\")\n      },hashTypes:{\'value\': \"ID\",\'rows\': \"STRING\",\'disabled\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'rows\': depth0,\'disabled\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"\\n                    </label>\\n                </div>\\n            </div>\\n        </fieldset>\\n\\n        <fieldset>\\n            <legend>Assessment</legend>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"large-2 columns\\\">\\n                    <label>Score (0-5)\\n                        \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"score\"),\n        \'class\': (\"score\")\n      },hashTypes:{\'value\': \"ID\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"large-12 columns\\\">\\n                    <label>Notes\\n                        \");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"notes\"),\n        \'rows\': (\"6\"),\n        \'class\': (\"notes\")\n      },hashTypes:{\'value\': \"ID\",\'rows\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'rows\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"large-2 large-offset-8 columns\\\">\\n                    \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"saving-indicator\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n                </div>\\n                <div class=\\\"large-2 columns\\\">\\n                    <button class=\\\"button small expand radius success create\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'disabled\': (\"isFormIncomplete\")\n      },hashTypes:{\'disabled\': \"ID\"},hashContexts:{\'disabled\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"createAssessment\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\">Submit</button>\\n                </div>\\n            </div>\\n        </fieldset>\\n    </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/assessments/new.js");

;eval("define(\"code-test-bot-app/templates/auth/login\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1>Session Expired</h1>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <p>You must login to continue.</p>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <button id=\'login\'\\n        \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"login\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"button small\\\">Login with Google Apps</button>\\n    </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/auth/login.js");

;eval("define(\"code-test-bot-app/templates/components/modal-dialog\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"reveal-modal-bg\\\" style=\\\"display:block;\\\"></div>\\n<div class=\\\"reveal-modal open\\\" style=\\\"display:block; visibility: visible; opacity: 1;\\\">\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"yield\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n<a class=\\\"close-reveal-modal\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"close\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">&#215;</a>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/components/modal-dialog.js");

;eval("define(\"code-test-bot-app/templates/error\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1>Error</h1>\\n        <div class=\\\"alert-box alert\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n    </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/error.js");

;eval("define(\"code-test-bot-app/templates/menu\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Submissions\");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    <li class=\\\"has-dropdown\\\">\\n        <a>Admin</a>\\n        <ul class=\\\"dropdown\\\">\\n          <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"users.index\", options) : helperMissing.call(depth0, \"link-to\", \"users.index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </ul>\\n    </lI>\\n    <li class=\\\"divider\\\"></li>\\n    \");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"<i class=\\\"fa fa-user\\\"></i> Users\");\n      }\n\n      data.buffer.push(\"<section class=\\\"top-bar-section\\\">\\n<ul class=\\\"right\\\">\\n    <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"submissions.index\", options) : helperMissing.call(depth0, \"link-to\", \"submissions.index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n    <li class=\\\"divider\\\"></li>\\n    <li><a target=\\\"_blank\\\" href=\\\"https://sites.google.com/a/cyrusinnovation.com/cyrus-internal-wiki/employee-guides/cyrus-interview-training/code-test-review-instructions\\\">Review Instructions</a></li>\\n    <li class=\\\"divider\\\"></li>\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"isAdmin\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    <li class=\\\"has-dropdown profile-dropdown\\\">\\n        <a>\");\n      stack1 = helpers._triageMustache.call(depth0, \"user.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" <img \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'src\': (\"user.imageUrl\")\n      },hashTypes:{\'src\': \"ID\"},hashContexts:{\'src\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" /></a>\\n        <ul class=\\\"dropdown\\\">\\n            <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"invalidateSession\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"><i class=\\\"fa fa-sign-out\\\"></i> Logout</a></li>\\n        </ul>\\n    </li>\\n</ul>\\n</section>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/menu.js");

;eval("define(\"code-test-bot-app/templates/saving-indicator\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<p class=\\\"inline-with-button text-right\\\"><i class=\\\"fa fa-spin fa-spinner\\\"></i> \");\n      stack1 = helpers._triageMustache.call(depth0, \"view.message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/saving-indicator.js");

;eval("define(\"code-test-bot-app/templates/secured/edit\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1>Edit Page</h1>\\n\\n        <ul class=\\\"tabs\\\" data-tab>\\n            <li class=\\\"tab-title active\\\"><a href=\\\"#edit\\\">Edit</a></li>\\n            <li class=\\\"tab-title\\\"><a href=\\\"#preview\\\">Preview</a></li>\\n        </ul>\\n        <div class=\\\"tabs-content\\\">\\n            <div class=\\\"content active\\\" id=\\\"edit\\\">\\n                \");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"rawText\"),\n        \'cols\': (\"80\"),\n        \'rows\': (\"20\")\n      },hashTypes:{\'value\': \"ID\",\'cols\': \"STRING\",\'rows\': \"STRING\"},hashContexts:{\'value\': depth0,\'cols\': depth0,\'rows\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"\\n            </div>\\n            <div class=\\\"content\\\" id=\\\"preview\\\">\\n                \");\n      data.buffer.push(escapeExpression((helper = helpers[\'render-marked\'] || (depth0 && depth0[\'render-marked\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"rawText\", options) : helperMissing.call(depth0, \"render-marked\", \"rawText\", options))));\n      data.buffer.push(\"\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-2 large-offset-10 columns\\\">\\n        <button class=\\\"button expand success radius small\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"save\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Save Changes</button>\\n    </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/secured/edit.js");

;eval("define(\"code-test-bot-app/templates/secured/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"<i class=\\\"fa fa-edit\\\"></i>\");\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers[\'render-marked\'] || (depth0 && depth0[\'render-marked\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"rawText\", options) : helperMissing.call(depth0, \"render-marked\", \"rawText\", options))));\n      data.buffer.push(\"\\n    </div>\\n</div>\\n\\n\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"button secondary radius tiny fixed-bottom-right\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"secured.edit\", options) : helperMissing.call(depth0, \"link-to\", \"secured.edit\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/secured/index.js");

;eval("define(\"code-test-bot-app/templates/submission/action-menu\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<a \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"view.mainLink\")\n      },hashTypes:{\'href\': \"ID\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" class=\\\"button radius tiny split\\\">View <span \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'data-dropdown\': (\"view.dropdownId\")\n      },hashTypes:{\'data-dropdown\': \"ID\"},hashContexts:{\'data-dropdown\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></a>\\n<ul \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'id\': (\"view.dropdownId\")\n      },hashTypes:{\'id\': \"ID\"},hashContexts:{\'id\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" class=\\\"f-dropdown\\\" data-dropdown-content>\\n    <li><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"confirmDelete\", \"view.context\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\"><i class=\\\"fa fa-times\\\"></i> Delete</a></li>\\n</ul>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/submission/action-menu.js");

;eval("define(\"code-test-bot-app/templates/submission/confirm-delete\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h2>Confirm Delete</h2>\\n        <p>Are you sure you want to delete the \");\n      stack1 = helpers._triageMustache.call(depth0, \"level.text\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"language.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" submission from \");\n      stack1 = helpers._triageMustache.call(depth0, \"candidateDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"?</p>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-3 large-offset-9 columns\\\">\\n        <button class=\\\"button radius small right\\\" style=\\\"margin-left: 4px;\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"closeModal\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Cancel</button>\\n        <button class=\\\"button alert radius small right\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"deleteSubmission\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Delete</button>\\n    </div>\\n</div>\\n\");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'modal-dialog\'] || (depth0 && depth0[\'modal-dialog\']),options={hash:{\n        \'action\': (\"closeModal\")\n      },hashTypes:{\'action\': \"STRING\"},hashContexts:{\'action\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"modal-dialog\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/submission/confirm-delete.js");

;eval("define(\"code-test-bot-app/templates/submission/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"(Closed)\");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n<div class=\\\"row display\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <label>Candidate</label>\\n        <p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"candidateDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n    </div>\\n</div>\\n\");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n<div class=\\\"row display\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <label>Average Score</label>\\n        <p class=\\\"score\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"averageScore\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n    </div>\\n</div>\\n\");\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n<div class=\\\"row display\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"showCloseButton\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"showReportButton\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n</div>\\n\");\n      return buffer;\n      }\n    function program8(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n        <button class=\\\"button small radius\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"closeSubmission\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\">Close Submission</button>\\n        \");\n      return buffer;\n      }\n\n    function program10(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"button small radius\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"submission.report\", options) : helperMissing.call(depth0, \"link-to\", \"submission.report\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      \n      data.buffer.push(\"Generate Report\");\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n              \");\n      stack1 = helpers.each.call(depth0, \"assessment\", \"in\", \"publishedAssessments\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(17, program17, data),fn:self.program(14, program14, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      return buffer;\n      }\n    function program14(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                  <tr class=\\\"assessment\\\">\\n                      <td class=\\\"assessor\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"assessment.assessor\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                      <td class=\\\"score\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"assessment.score\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                      <td class=\\\"created-at\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"assessment.updatedAtDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                      <td>\\n                          \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"button tiny radius\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"assessment.index\", \"assessment\", options) : helperMissing.call(depth0, \"link-to\", \"assessment.index\", \"assessment\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                      </td>\\n                  </tr>\\n              \");\n      return buffer;\n      }\n    function program15(depth0,data) {\n      \n      \n      data.buffer.push(\"View\");\n      }\n\n    function program17(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n                  <tr>\\n                      <td colspan=\\\"4\\\" class=\\\"text-center\\\">No assessments yet.</td>\\n                  </tr>\\n              \");\n      }\n\n    function program19(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n              <tr><td class=\\\"text-center\\\" colspan=\\\"4\\\">All assessments will be visible once you\'ve submitted yours.</td></tr>\\n            \");\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n            \");\n      stack1 = helpers[\'if\'].call(depth0, \"userCanCreateAssessment\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(22, program22, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n    function program22(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"button small radius success right\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(23, program23, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"assessments.new\", options) : helperMissing.call(depth0, \"link-to\", \"assessments.new\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            \");\n      return buffer;\n      }\n    function program23(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"newAssessmentButtonText\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n    function program25(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n            <p>This submission is closed for new assessments.</p>\\n        \");\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1>\");\n      stack1 = helpers._triageMustache.call(depth0, \"level.text\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"language.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" Submission \");\n      stack1 = helpers[\'if\'].call(depth0, \"isInactive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h1>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h3>Details</h3>\\n    </div>\\n</div>\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"isRecruiter\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n<div class=\\\"row display\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <label>File</label>\\n        <a class=\\\"button small radius success\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"zipfile\")\n      },hashTypes:{\'href\': \"ID\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"><i class=\\\"fa fa-download\\\"></i>&nbsp;Download</a>\\n    </div>\\n</div>\\n<div class=\\\"row display\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <label>Email Text</label>\\n        <p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"emailText\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n    </div>\\n</div>\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"hasPublishedAssessments\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"isRecruiter\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h3>Assessments</h3>\\n\\n        <table class=\\\"large-12 assessments\\\">\\n            <thead>\\n            <tr>\\n                <th width=\\\"33%\\\">Assessor</th>\\n                <th width=\\\"33%\\\">Score</th>\\n                <th width=\\\"33%\\\">Completion Date</th>\\n                <th></th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            \");\n      stack1 = helpers[\'if\'].call(depth0, \"showAssessments\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(19, program19, data),fn:self.program(13, program13, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            </tbody>\\n        </table>\\n\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"active\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(25, program25, data),fn:self.program(21, program21, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n</div>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/submission/index.js");

;eval("define(\"code-test-bot-app/templates/submission/report\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1>Report for \");\n      stack1 = helpers._triageMustache.call(depth0, \"candidateName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h1>\\n        <p>This report was generated from assessments by \");\n      stack1 = helpers._triageMustache.call(depth0, \"assessors\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\".</p>\\n    </div>\\n</div>\\n\\n<div class=\\\"row display\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <label>Average Score</label>\\n        <p class=\\\"score\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"averageScore\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n    </div>\\n</div>\\n\\n<div class=\\\"row display\\\">\\n    <div class=\\\"large-12 columns report\\\">\\n        \");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"report\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n    </div>\\n</div>\\n\\n<!-- TODO: Remove this hack -->\\n\");\n      stack1 = helpers.each.call(depth0, \"assessments\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/submission/report.js");

;eval("define(\"code-test-bot-app/templates/submissions/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Analytics\");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n                    <th width=\\\"40%\\\"> <a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"activeSortBy\", \"candidateDisplay:asc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" >Candidate</a></th>\\n                    <th width=\\\"20%\\\"> <a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"activeSortBy\", \"languageDisplay:asc, createdAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Language</a></th>\\n                    <th width=\\\"20%\\\"><a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"activeSortBy\", \"level.text:asc, createdAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Level</a></th>\\n                    <th width=\\\"20%\\\"><a href=\\\"#\\\"\");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"activeSortBy\", \"createdAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Created date</a></th>\\n                \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n                    <th width=\\\"33%\\\"> <a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"activeSortBy\", \"languageDisplay:asc, createdAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Language</a></th>\\n                    <th width=\\\"33%\\\"><a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"activeSortBy\", \"level.text:asc, createdAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Level</a></th>\\n                    <th width=\\\"33%\\\"><a href=\\\"#\\\"\");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"activeSortBy\", \"createdAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Created date</a></th>\\n                \");\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n                <tr class=\\\"submission\\\">\\n                    \");\n      stack1 = helpers[\'if\'].call(depth0, \"isRecruiter\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                    <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"submission.languageDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"submission.level.text\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"submission.createdAtDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td>\\n                    \");\n      stack1 = helpers[\'if\'].call(depth0, \"isRecruiter\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(10, program10, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                    </td>\\n                </tr>\\n                \");\n      return buffer;\n      }\n    function program8(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n                    <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"submission.candidateDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    \");\n      return buffer;\n      }\n\n    function program10(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n                        \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"submission/action-menu\", {hash:{\n        \'context\': (\"submission\")\n      },hashTypes:{\'context\': \"ID\"},hashContexts:{\'context\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n                    \");\n      return buffer;\n      }\n\n    function program12(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"button tiny radius\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(13, program13, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"submission.index\", \"submission\", options) : helperMissing.call(depth0, \"link-to\", \"submission.index\", \"submission\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                    \");\n      return buffer;\n      }\n    function program13(depth0,data) {\n      \n      \n      data.buffer.push(\"View\");\n      }\n\n    function program15(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n                <tr>\\n                    <td colspan=\\\"5\\\" class=\\\"text-center\\\">There are no active submissions.</td>\\n                </tr>\\n                \");\n      }\n\n    function program17(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'classNames\': (\"button small radius success right\")\n      },hashTypes:{\'classNames\': \"STRING\"},hashContexts:{\'classNames\': depth0},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"submissions.new\", options) : helperMissing.call(depth0, \"link-to\", \"submissions.new\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n</div>\\n\");\n      return buffer;\n      }\n    function program18(depth0,data) {\n      \n      \n      data.buffer.push(\"New Submission\");\n      }\n\n    function program20(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n                <th width=\\\"30%\\\"><a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"inactiveSortBy\", \"candidateDisplay:asc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Candidate</a></th>\\n                <th width=\\\"10%\\\"><a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"inactiveSortBy\", \"averageScore:desc, updatedAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Score</a></th>\\n                <th width=\\\"20%\\\"> <a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"inactiveSortBy\", \"languageDisplay:asc, updatedAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Language</a></th>\\n                <th width=\\\"20%\\\"><a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"inactiveSortBy\", \"level.text:asc, updatedAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Level</a></th>\\n                <th width=\\\"20%\\\"><a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"inactiveSortBy\", \"updatedAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Closed At</a></th>\\n            \");\n      return buffer;\n      }\n\n    function program22(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n                <th width=\\\"40%\\\"><a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"inactiveSortBy\", \"averageScore:desc, updatedAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Score</a></th>\\n                <th width=\\\"20%\\\"> <a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"inactiveSortBy\", \"languageDisplay:asc, updatedAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Language</a></th>\\n                <th width=\\\"20%\\\"><a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"inactiveSortBy\", \"level.text:asc, updatedAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Level</a></th>\\n                <th width=\\\"20%\\\"><a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"inactiveSortBy\", \"updatedAtDisplay:desc\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">Closed At</a></th>\\n            \");\n      return buffer;\n      }\n\n    function program24(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n                <tr class=\\\"submission\\\">\\n                    \");\n      stack1 = helpers[\'if\'].call(depth0, \"isRecruiter\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(25, program25, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                    <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"submission.averageScore\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"submission.languageDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"submission.level.text\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"submission.updatedAtDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td>\\n                    \");\n      stack1 = helpers[\'if\'].call(depth0, \"isRecruiter\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(10, program10, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                    </td>\\n                </tr>\\n            \");\n      return buffer;\n      }\n    function program25(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n                        <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"submission.candidateDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    \");\n      return buffer;\n      }\n\n    function program27(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n                <tr>\\n                    <td colspan=\\\"6\\\" class=\\\"text-center\\\">There are no inactive submissions.</td>\\n                </tr>\\n            \");\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1 style=\\\"float:left\\\">Active Submissions </h1>\\n        <div style=\\\"margin-top:12px\\\">\\n            \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'classNames\': (\"button small radius right\")\n      },hashTypes:{\'classNames\': \"STRING\"},hashContexts:{\'classNames\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"analytics\", options) : helperMissing.call(depth0, \"link-to\", \"analytics\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </div>\\n\\n        <table width=\\\"100%\\\">\\n            <thead>\\n                <tr>\\n                \");\n      stack1 = helpers[\'if\'].call(depth0, \"isRecruiter\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                    <th></th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                \");\n      stack1 = helpers.each.call(depth0, \"submission\", \"in\", \"activeSubmissions\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(15, program15, data),fn:self.program(7, program7, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"isRecruiter\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(17, program17, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1>Inactive Submissions</h1>\\n\\n        <table width=\\\"100%\\\">\\n            <thead>\\n            <tr>\\n            \");\n      stack1 = helpers[\'if\'].call(depth0, \"isRecruiter\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(22, program22, data),fn:self.program(20, program20, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n                <th></th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            \");\n      stack1 = helpers.each.call(depth0, \"submission\", \"in\", \"inactiveSubmissions\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(27, program27, data),fn:self.program(24, program24, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/submissions/index.js");

;eval("define(\"code-test-bot-app/templates/submissions/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1>New Submission</h1>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <label>Candidate Name\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"candidateName\"),\n        \'placeholder\': (\"Name\")\n      },hashTypes:{\'value\': \"ID\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        </label>\\n        <label>Candidate Email\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"candidateEmail\"),\n        \'placeholder\': (\"Email Address\")\n      },hashTypes:{\'value\': \"ID\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        </label>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-4 columns\\\">\\n        \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Select\", {hash:{\n        \'viewName\': (\"select\"),\n        \'contentBinding\': (\"levels\"),\n        \'optionLabelPath\': (\"content.text\"),\n        \'optionValuePath\': (\"content.id\"),\n        \'prompt\': (\"Select candidate level:\"),\n        \'selectionBinding\': (\"selectedLevel\")\n      },hashTypes:{\'viewName\': \"STRING\",\'contentBinding\': \"STRING\",\'optionLabelPath\': \"STRING\",\'optionValuePath\': \"STRING\",\'prompt\': \"STRING\",\'selectionBinding\': \"STRING\"},hashContexts:{\'viewName\': depth0,\'contentBinding\': depth0,\'optionLabelPath\': depth0,\'optionValuePath\': depth0,\'prompt\': depth0,\'selectionBinding\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-4 columns\\\">\\n        \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Select\", {hash:{\n        \'viewName\': (\"select\"),\n        \'id\': (\"language-select\"),\n        \'contentBinding\': (\"languages\"),\n        \'optionLabelPath\': (\"content.name\"),\n        \'optionValuePath\': (\"content.id\"),\n        \'prompt\': (\"Select a language:\"),\n        \'selectionBinding\': (\"selectedLanguage\")\n      },hashTypes:{\'viewName\': \"STRING\",\'id\': \"STRING\",\'contentBinding\': \"STRING\",\'optionLabelPath\': \"STRING\",\'optionValuePath\': \"STRING\",\'prompt\': \"STRING\",\'selectionBinding\': \"STRING\"},hashContexts:{\'viewName\': depth0,\'id\': depth0,\'contentBinding\': depth0,\'optionLabelPath\': depth0,\'optionValuePath\': depth0,\'prompt\': depth0,\'selectionBinding\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <label>Copy and paste the email text or any instructions given by the candidate.\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"submission.emailText\"),\n        \'rows\': (\"6\"),\n        \'placeholder\': (\"Email text or instructions\"),\n        \'id\': (\"email-text\")\n      },hashTypes:{\'value\': \"ID\",\'rows\': \"STRING\",\'placeholder\': \"STRING\",\'id\': \"STRING\"},hashContexts:{\'value\': depth0,\'rows\': depth0,\'placeholder\': depth0,\'id\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"\\n        </label>\\n        <label>Select the zipfile provided by the candidate.\\n            \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"file-upload\", {hash:{\n        \'name\': (\"zipfile\"),\n        \'file\': (\"submission.zipfile\"),\n        \'id\': (\"zipfile\"),\n        \'fileName\': (\"submission.fileName\")\n      },hashTypes:{\'name\': \"STRING\",\'file\': \"ID\",\'id\': \"STRING\",\'fileName\': \"ID\"},hashContexts:{\'name\': depth0,\'file\': depth0,\'id\': depth0,\'fileName\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n        </label>\\n        <input id=\\\"submit-button\\\" type=\\\"button\\\" value=\\\"Create New Codetest!\\\" class=\\\"button small radius success\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'disabled\': (\"isFormIncomplete\")\n      },hashTypes:{\'disabled\': \"ID\"},hashContexts:{\'disabled\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"submit\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"/>\\n    </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/submissions/new.js");

;eval("define(\"code-test-bot-app/templates/user/edit\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n        <div class=\\\"large-12 columns\\\">\\n            <h1>Edit \");\n      stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" </h1>\\n        </div>\\n    </div>\\n<div class=\\\"row\\\">\\n        <div id=\\\"role-warning\\\" class=\\\"warning\\\"></div>\\n        <div class=\\\"large-12 columns\\\">\\n            <table class=\\\"user-roles\\\">\\n                <thead>\\n            <tr>\\n                    <th class=\\\"large-3\\\">Name</th>\\n                    <th class=\\\"large-3\\\">Email</th>\\n                    <th class=\\\"large-3\\\">Current Role</th>\\n                    <th class=\\\"large-3\\\">Change Role</th>\\n                    <th></th>\\n                </tr>\\n            </thead>\\n                <tbody>\\n            <tr>\\n                    <td class=\\\"name\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td class=\\\"email\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"email\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"role.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td class=\\\"role\\\">\\n                        \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Select\", {hash:{\n        \'id\': (\"role-select\"),\n        \'prompt\': (\"Please select a role\"),\n        \'contentBinding\': (\"all_roles\"),\n        \'optionValuePath\': (\"content.id\"),\n        \'optionLabelPath\': (\"content.name\"),\n        \'selection\': (\"selectedRole\")\n      },hashTypes:{\'id\': \"STRING\",\'prompt\': \"STRING\",\'contentBinding\': \"STRING\",\'optionValuePath\': \"STRING\",\'optionLabelPath\': \"STRING\",\'selection\': \"ID\"},hashContexts:{\'id\': depth0,\'prompt\': depth0,\'contentBinding\': depth0,\'optionValuePath\': depth0,\'optionLabelPath\': depth0,\'selection\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n                    <td><button id=\\\"add-role\\\" class=\\\"button tiny\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"changeRole\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">change role</button></td>\\n                </tr>\\n            </tbody>\\n            </table>\\n        </div>\\n    </div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/user/edit.js");

;eval("define(\"code-test-bot-app/templates/users/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n                <tr>\\n                    <td class=\\\"name\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td class=\\\"email\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"email\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td class=\\\"role\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"role.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                    <td>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"button small radius\"),\n        \'disabled\': (\"editDisabled\")\n      },hashTypes:{\'class\': \"STRING\",\'disabled\': \"ID\"},hashContexts:{\'class\': depth0,\'disabled\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"user.edit\", \"\", options) : helperMissing.call(depth0, \"link-to\", \"user.edit\", \"\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n                </tr>\\n            \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"Edit\");\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <h1>Users</h1>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n        <table class=\\\"large-12 users\\\">\\n            <thead>\\n            <tr>\\n                <th class=\\\"large-3\\\">Name</th>\\n                <th class=\\\"large-6\\\">Email</th>\\n                <th class=\\\"large-3\\\">Role</th>\\n                <th></th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            \");\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=code-test-bot-app/templates/users/index.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/adapters\');\n    test(\'code-test-bot-app/adapters/application.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/adapters/application.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app\');\n    test(\'code-test-bot-app/app.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/app.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/app.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/components/bar-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/components\');\n    test(\'code-test-bot-app/components/bar-chart.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/components/bar-chart.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/components/bar-chart.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/components/modal-dialog.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/components\');\n    test(\'code-test-bot-app/components/modal-dialog.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/components/modal-dialog.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/components/modal-dialog.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/analytics/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/analytics\');\n    test(\'code-test-bot-app/controllers/analytics/index.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/analytics/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/analytics/index.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers\');\n    test(\'code-test-bot-app/controllers/application.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/application.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/assessment/edit.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/assessment\');\n    test(\'code-test-bot-app/controllers/assessment/edit.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/assessment/edit.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/assessment/edit.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/assessment/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/assessment\');\n    test(\'code-test-bot-app/controllers/assessment/index.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/assessment/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/assessment/index.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/assessments/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/assessments\');\n    test(\'code-test-bot-app/controllers/assessments/new.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/assessments/new.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/assessments/new.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/auth/login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/auth\');\n    test(\'code-test-bot-app/controllers/auth/login.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/auth/login.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/auth/login.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/menu.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers\');\n    test(\'code-test-bot-app/controllers/menu.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/menu.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/menu.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/secured/edit.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/secured\');\n    test(\'code-test-bot-app/controllers/secured/edit.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/secured/edit.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/secured/edit.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/submission/confirm-delete.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/submission\');\n    test(\'code-test-bot-app/controllers/submission/confirm-delete.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/submission/confirm-delete.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/submission/confirm-delete.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/submission/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/submission\');\n    test(\'code-test-bot-app/controllers/submission/index.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/submission/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/submission/index.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/submission/report.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/submission\');\n    test(\'code-test-bot-app/controllers/submission/report.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/submission/report.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/submission/report.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/submissions/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/submissions\');\n    test(\'code-test-bot-app/controllers/submissions/index.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/submissions/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/submissions/index.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/submissions/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/submissions\');\n    test(\'code-test-bot-app/controllers/submissions/new.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/submissions/new.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/submissions/new.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers\');\n    test(\'code-test-bot-app/controllers/user.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/user.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/user/edit.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/user\');\n    test(\'code-test-bot-app/controllers/user/edit.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/user/edit.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/user/edit.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/controllers/users/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/controllers/users\');\n    test(\'code-test-bot-app/controllers/users/index.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/controllers/users/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/controllers/users/index.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/helpers/render-marked.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/helpers\');\n    test(\'code-test-bot-app/helpers/render-marked.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/helpers/render-marked.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/helpers/render-marked.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/initializers/authentication.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/initializers\');\n    test(\'code-test-bot-app/initializers/authentication.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/initializers/authentication.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/initializers/authentication.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/initializers/error-reporting.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/initializers\');\n    test(\'code-test-bot-app/initializers/error-reporting.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/initializers/error-reporting.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/initializers/error-reporting.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/initializers/stores.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/initializers\');\n    test(\'code-test-bot-app/initializers/stores.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/initializers/stores.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/initializers/stores.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/lib/auth/www-authenticate-header.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/lib/auth\');\n    test(\'code-test-bot-app/lib/auth/www-authenticate-header.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/lib/auth/www-authenticate-header.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/lib/auth/www-authenticate-header.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/lib/ember-simple-auth/authenticators\');\n    test(\'code-test-bot-app/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/lib/stores/base.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/lib/stores\');\n    test(\'code-test-bot-app/lib/stores/base.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/lib/stores/base.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/lib/stores/base.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/lib/stores/ephemeral.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/lib/stores\');\n    test(\'code-test-bot-app/lib/stores/ephemeral.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/lib/stores/ephemeral.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/lib/stores/ephemeral.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/lib/stores/local.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/lib/stores\');\n    test(\'code-test-bot-app/lib/stores/local.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/lib/stores/local.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/lib/stores/local.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/lib/window-location-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/lib\');\n    test(\'code-test-bot-app/lib/window-location-helper.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/lib/window-location-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/lib/window-location-helper.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/mixins/auto-saveable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/mixins\');\n    test(\'code-test-bot-app/mixins/auto-saveable.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/mixins/auto-saveable.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/mixins/auto-saveable.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/mixins/user-aware-controller.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/mixins\');\n    test(\'code-test-bot-app/mixins/user-aware-controller.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/mixins/user-aware-controller.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/mixins/user-aware-controller.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/mixins/user-aware-route.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/mixins\');\n    test(\'code-test-bot-app/mixins/user-aware-route.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/mixins/user-aware-route.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/mixins/user-aware-route.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/mixins/user-aware.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/mixins\');\n    test(\'code-test-bot-app/mixins/user-aware.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/mixins/user-aware.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/mixins/user-aware.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/models/assessment.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/models\');\n    test(\'code-test-bot-app/models/assessment.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/models/assessment.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/models/assessment.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/models/assessor.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/models\');\n    test(\'code-test-bot-app/models/assessor.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/models/assessor.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/models/assessor.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/models/language.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/models\');\n    test(\'code-test-bot-app/models/language.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/models/language.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/models/language.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/models/level.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/models\');\n    test(\'code-test-bot-app/models/level.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/models/level.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/models/level.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/models/page.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/models\');\n    test(\'code-test-bot-app/models/page.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/models/page.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/models/page.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/models/role.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/models\');\n    test(\'code-test-bot-app/models/role.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/models/role.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/models/role.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/models/session.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/models\');\n    test(\'code-test-bot-app/models/session.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/models/session.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/models/session.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/models/submission.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/models\');\n    test(\'code-test-bot-app/models/submission.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/models/submission.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/models/submission.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/models\');\n    test(\'code-test-bot-app/models/user.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/models/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/models/user.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app\');\n    test(\'code-test-bot-app/router.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/router.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/router.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/admin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes\');\n    test(\'code-test-bot-app/routes/admin.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/admin.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/admin.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/analytics/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes/analytics\');\n    test(\'code-test-bot-app/routes/analytics/index.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/analytics/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/analytics/index.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes\');\n    test(\'code-test-bot-app/routes/application.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/application.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/assessments/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes/assessments\');\n    test(\'code-test-bot-app/routes/assessments/new.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/assessments/new.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/assessments/new.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/auth/complete.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes/auth\');\n    test(\'code-test-bot-app/routes/auth/complete.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/auth/complete.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/auth/complete.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/auth/login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes/auth\');\n    test(\'code-test-bot-app/routes/auth/login.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/auth/login.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/auth/login.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/error.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes\');\n    test(\'code-test-bot-app/routes/error.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/error.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/error.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/secured.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes\');\n    test(\'code-test-bot-app/routes/secured.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/secured.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/secured.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/secured/edit.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes/secured\');\n    test(\'code-test-bot-app/routes/secured/edit.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/secured/edit.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/secured/edit.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/secured/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes/secured\');\n    test(\'code-test-bot-app/routes/secured/index.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/secured/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/secured/index.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/submissions/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes/submissions\');\n    test(\'code-test-bot-app/routes/submissions/index.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/submissions/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/submissions/index.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/submissions/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes/submissions\');\n    test(\'code-test-bot-app/routes/submissions/new.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/submissions/new.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/submissions/new.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/routes/users/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/routes/users\');\n    test(\'code-test-bot-app/routes/users/index.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/routes/users/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/routes/users/index.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/fixtures.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests\');\n    test(\'code-test-bot-app/tests/fixtures.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/fixtures.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/fixtures.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/helpers/authentication.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/helpers\');\n    test(\'code-test-bot-app/tests/helpers/authentication.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/helpers/authentication.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/helpers/authentication.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/helpers/data.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/helpers\');\n    test(\'code-test-bot-app/tests/helpers/data.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/helpers/data.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/helpers/data.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/helpers/dom-helpers.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/helpers\');\n    test(\'code-test-bot-app/tests/helpers/dom-helpers.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/helpers/dom-helpers.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/helpers/dom-helpers.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/helpers/fake-server.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/helpers\');\n    test(\'code-test-bot-app/tests/helpers/fake-server.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/helpers/fake-server.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/helpers/fake-server.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/helpers\');\n    test(\'code-test-bot-app/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/helpers/resolver.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/helpers\');\n    test(\'code-test-bot-app/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/helpers/start-app.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/helpers/test-for.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/helpers\');\n    test(\'code-test-bot-app/tests/helpers/test-for.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/helpers/test-for.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/helpers/test-for.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/helpers/utils.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/helpers\');\n    test(\'code-test-bot-app/tests/helpers/utils.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/helpers/utils.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/helpers/utils.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/integration/assessments/assessments-new-integration-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/integration/assessments\');\n    test(\'code-test-bot-app/tests/integration/assessments/assessments-new-integration-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/integration/assessments/assessments-new-integration-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/integration/assessments/assessments-new-integration-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/integration/auth-complete-integration-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/integration\');\n    test(\'code-test-bot-app/tests/integration/auth-complete-integration-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/integration/auth-complete-integration-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/integration/auth-complete-integration-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/integration/authenticated-routes-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/integration\');\n    test(\'code-test-bot-app/tests/integration/authenticated-routes-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/integration/authenticated-routes-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/integration/authenticated-routes-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/integration/authentication/expired-credentials-integration-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/integration/authentication\');\n    test(\'code-test-bot-app/tests/integration/authentication/expired-credentials-integration-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/integration/authentication/expired-credentials-integration-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/integration/authentication/expired-credentials-integration-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/integration/submissions/submissions-integration-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/integration/submissions\');\n    test(\'code-test-bot-app/tests/integration/submissions/submissions-integration-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/integration/submissions/submissions-integration-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/integration/submissions/submissions-integration-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/integration/users/users-index-integration-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/integration/users\');\n    test(\'code-test-bot-app/tests/integration/users/users-index-integration-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/integration/users/users-index-integration-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/integration/users/users-index-integration-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests\');\n    test(\'code-test-bot-app/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/test-helper.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/test-loader.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests\');\n    test(\'code-test-bot-app/tests/test-loader.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/test-loader.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/test-loader.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/controllers/assessment/assessment-edit-controller-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/controllers/assessment\');\n    test(\'code-test-bot-app/tests/unit/controllers/assessment/assessment-edit-controller-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/controllers/assessment/assessment-edit-controller-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/controllers/assessment/assessment-edit-controller-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/controllers/assessment/assessment-index-controller-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/controllers/assessment\');\n    test(\'code-test-bot-app/tests/unit/controllers/assessment/assessment-index-controller-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/controllers/assessment/assessment-index-controller-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/controllers/assessment/assessment-index-controller-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/controllers/assessments/assessments-new-controller-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/controllers/assessments\');\n    test(\'code-test-bot-app/tests/unit/controllers/assessments/assessments-new-controller-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/controllers/assessments/assessments-new-controller-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/controllers/assessments/assessments-new-controller-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/controllers/auth/auth-login-controller-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/controllers/auth\');\n    test(\'code-test-bot-app/tests/unit/controllers/auth/auth-login-controller-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/controllers/auth/auth-login-controller-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/controllers/auth/auth-login-controller-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/controllers/submissions/submissions-new-controller-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/controllers/submissions\');\n    test(\'code-test-bot-app/tests/unit/controllers/submissions/submissions-new-controller-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/controllers/submissions/submissions-new-controller-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/controllers/submissions/submissions-new-controller-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/controllers/user/user-edit-controller-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/controllers/user\');\n    test(\'code-test-bot-app/tests/unit/controllers/user/user-edit-controller-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/controllers/user/user-edit-controller-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/controllers/user/user-edit-controller-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/lib/auth/www-authenticate-header-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/lib/auth\');\n    test(\'code-test-bot-app/tests/unit/lib/auth/www-authenticate-header-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/lib/auth/www-authenticate-header-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/lib/auth/www-authenticate-header-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/lib/ember-simple-auth/authenticators\');\n    test(\'code-test-bot-app/tests/unit/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/lib/stores/ephemeral-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/lib/stores\');\n    test(\'code-test-bot-app/tests/unit/lib/stores/ephemeral-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/lib/stores/ephemeral-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/lib/stores/ephemeral-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/lib/stores/local-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/lib/stores\');\n    test(\'code-test-bot-app/tests/unit/lib/stores/local-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/lib/stores/local-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/lib/stores/local-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/mixins/auto-saveable-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/mixins\');\n    test(\'code-test-bot-app/tests/unit/mixins/auto-saveable-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/mixins/auto-saveable-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/mixins/auto-saveable-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/routes/auth/auth-login-route-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/routes/auth\');\n    test(\'code-test-bot-app/tests/unit/routes/auth/auth-login-route-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/routes/auth/auth-login-route-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/routes/auth/auth-login-route-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/routes/submissions/submissions-index-route-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/routes/submissions\');\n    test(\'code-test-bot-app/tests/unit/routes/submissions/submissions-index-route-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/routes/submissions/submissions-index-route-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/routes/submissions/submissions-index-route-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/routes/submissions/submissions-new-route-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/routes/submissions\');\n    test(\'code-test-bot-app/tests/unit/routes/submissions/submissions-new-route-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/routes/submissions/submissions-new-route-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/routes/submissions/submissions-new-route-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/tests/unit/utils/math-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/tests/unit/utils\');\n    test(\'code-test-bot-app/tests/unit/utils/math-test.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/tests/unit/utils/math-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/tests/unit/utils/math-test.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/utils/math.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/utils\');\n    test(\'code-test-bot-app/utils/math.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/utils/math.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/utils/math.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/views/candidates/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/views/candidates\');\n    test(\'code-test-bot-app/views/candidates/index.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/views/candidates/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/views/candidates/index.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/views/file-upload.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/views\');\n    test(\'code-test-bot-app/views/file-upload.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/views/file-upload.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/views/file-upload.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/views/foundation.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/views\');\n    test(\'code-test-bot-app/views/foundation.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/views/foundation.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/views/foundation.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/views/menu.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/views\');\n    test(\'code-test-bot-app/views/menu.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/views/menu.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/views/menu.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/views/saving-indicator.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/views\');\n    test(\'code-test-bot-app/views/saving-indicator.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/views/saving-indicator.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/views/saving-indicator.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/views/secured/edit.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/views/secured\');\n    test(\'code-test-bot-app/views/secured/edit.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/views/secured/edit.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/views/secured/edit.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/views/submission/action-menu.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/views/submission\');\n    test(\'code-test-bot-app/views/submission/action-menu.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/views/submission/action-menu.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/views/submission/action-menu.jshint.js");

;eval("define(\"code-test-bot-app/tests/code-test-bot-app/views/submissions/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - code-test-bot-app/views/submissions\');\n    test(\'code-test-bot-app/views/submissions/index.js should pass jshint\', function() { \n      ok(true, \'code-test-bot-app/views/submissions/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=code-test-bot-app/tests/code-test-bot-app/views/submissions/index.jshint.js");

;eval("define(\"code-test-bot-app/tests/fixtures\", \n  [\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* globals CodeTestBotAppENV */\n\n    var defineFixture = __dependency1__.defineFixture;\n\n    defineFixture(CodeTestBotAppENV.NEW_SESSION_URL + \'?redirect_uri=\' + CodeTestBotAppENV.APP_HOST + \'/auth/complete\', {\n        response: {auth_uri: \'testing_uri\'},\n        jqXHR: {},\n        textStatus: \'success\'\n    });\n\n    defineServerFixture(\'/users\', { \n        users: [\n            { id: 1, name: \'User1\', editable: true, role_id: 1 },\n            { id: 2, name: \'User2\', editable: false, role_id: 3 }\n        ],\n        roles: [\n            { id: 1, name: \'Assessor\' },\n            { id: 3, name: \'Administrator\' }\n        ]\n    });\n    defineServerFixture(\'/users/1\', { \n        user: { id: 1, name: \'User1\', editable: true, role_id: 1 },\n        roles: [{ id: 1, name: \'Assessor\' }]\n    });\n    defineServerFixture(\'/users/2\', { \n        user: { id: 2, name: \'User2\', editable: false, role_id: 3 },\n        roles: [{ id: 3, name: \'Administrator\' }]\n    });\n\n    defineServerFixture(\'/roles/1\', {\n        role: { id: 1, name: \'Assessor\' }\n    });\n    defineServerFixture(\'/roles/3\', {\n        role: { id: 3, name: \'Administrator\' }\n    });\n\n    defineServerFixture(\'/languages\', { languages: [\n        { id: 1, name: \'Java\' },\n        { id: 2, name: \'Ruby\' }\n    ]});\n    defineServerFixture(\'/languages/1\', { language: { id: 1, name: \'Java\' } });\n    defineServerFixture(\'/languages/2\', { language: { id: 2, name: \'Ruby\' } });\n\n    defineServerFixture(\'/levels\', { levels: [\n        { id: 1, text: \'Junior\' },\n        { id: 2, text: \'Mid\' },\n        { id: 3, text: \'Senior\' },\n        { id: 4, text: \'Tech Lead\' }\n    ]});\n    defineServerFixture(\'/levels/1\', { level: { id: 1, text: \'Junior\' } });\n    defineServerFixture(\'/levels/2\', { level: { id: 2, text: \'Mid\' } });\n\n    defineServerFixture(\'/submissions\', {\n        submissions: [{id: 1}]\n    });\n    defineServerFixture(\'/submissions/1\', {\n        submission: {\n            id: 1,\n            candidate_email: \'Candidate1\',\n            level_id: 1,\n            email_text: \'some text\',\n            zipfile: \'url to file\',\n            language_id: 1,\n        },\n        levels: [\n            { id: 1, text: \'Junior\' }\n        ],\n        languages: [\n            { id: 1, name: \'Java\' }\n        ]\n    });\n\n    defineServerFixture(\'/assessors/2\', {\n        assessor: { id: 2, name: \'Assessor2\' }\n    });\n    defineServerFixture(\'/assessors/3\', {\n        assessor: { id: 3, name: \'Assessor3\' }\n    });\n\n    function defineServerFixture(path, response, options) {\n        options = Ember.merge({ jqXHR: {}, textStatus: \'success\' }, options);\n        options.response = response;\n\n        defineFixture(CodeTestBotAppENV.SERVER_HOST + path, options);\n    }\n\n    __exports__.defineServerFixture = defineServerFixture;\n\n    __exports__[\"default\"] = {};\n  });//# sourceURL=code-test-bot-app/tests/fixtures.js");

;eval("define(\"code-test-bot-app/tests/helpers/authentication\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function authenticateSession() {\n        var session = getSession();\n        session.authenticate(\'authenticator:out-of-band-token\', {\n            access_token: \'fake_token\',\n            expires_at: (new Date().getTime() / 1000) + 86400,\n            expires: true\n        });\n    }\n\n    function getSession() {\n        return CodeTestBotApp.__container__.lookup(\'session:main\');\n    }\n\n    __exports__.authenticateSession = authenticateSession;\n    __exports__.getSession = getSession;\n  });//# sourceURL=code-test-bot-app/tests/helpers/authentication.js");

;eval("define(\"code-test-bot-app/tests/helpers/data\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function injectFakeStore(target) {\n        var store = { createRecord: function() {}, find: function() {} };\n        target.store = store;\n        return store;\n    }\n\n    __exports__.injectFakeStore = injectFakeStore;\n  });//# sourceURL=code-test-bot-app/tests/helpers/data.js");

;eval("define(\"code-test-bot-app/tests/helpers/dom-helpers\", \n  [],\n  function() {\n    \"use strict\";\n\n    Ember.Test.registerHelper(\'shouldContainText\', function(app, selector, text, context) {\n        var el = findWithAssert(selector, context);\n        var index = el.text().indexOf(text);\n        ok(index !== -1, \'expected text not found\');\n    });\n  });//# sourceURL=code-test-bot-app/tests/helpers/dom-helpers.js");

;eval("define(\"code-test-bot-app/tests/helpers/fake-server\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    var __server__;\n\n    function start() {\n        __server__ = sinon.fakeServer.create();\n        __server__.autoRespond = true;\n        __server__.respondWith(function(request) {\n            console.error(\'Unhandled request \' + request.method + \' \' + request.url);\n            request.respond([404, {}, \'\']);\n        });\n    }\n\n    function stop() {\n        __server__.restore();\n    }\n\n    function respondWith(method, url, response) {\n        __server__.respondWith(method, url, response);\n    }\n\n    function jsonSuccess(method, url, response) {\n        respondWith(method, url, [200, { \'Content-Type\': \'application/json\' }, JSON.stringify(response)]);\n    }\n\n    __exports__[\"default\"] = {\n        start: start,\n        stop: stop,\n        respondWith: respondWith,\n        jsonSuccess: jsonSuccess\n    };\n  });//# sourceURL=code-test-bot-app/tests/helpers/fake-server.js");

;eval("define(\"code-test-bot-app/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'code-test-bot-app\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=code-test-bot-app/tests/helpers/resolver.js");

;eval("define(\"code-test-bot-app/tests/helpers/start-app\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var Application = require(\'code-test-bot-app/app\')[\'default\'];\n    var Router = require(\'code-test-bot-app/router\')[\'default\'];\n\n    function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION:false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function(){\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n\n    function startAppEphemeral(attrs) {\n        attrs = Ember.merge({ storeFactory: \'session-store:ephemeral\', dataStore: \'data-store:ephemeral\' }, attrs);\n        return window.CodeTestBotApp = startApp(attrs);\n    }\n\n    __exports__.startAppEphemeral = startAppEphemeral;function resetApp() {\n        window.CodeTestBotApp.reset();\n    }\n\n    __exports__.resetApp = resetApp;__exports__[\"default\"] = startApp;\n  });//# sourceURL=code-test-bot-app/tests/helpers/start-app.js");

;eval("define(\"code-test-bot-app/tests/helpers/test-for\", \n  [\"code-test-bot-app/tests/helpers/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n\n    // TODO: Remove when ember-qunit/qunit-bdd situation is sorted out.\n    // Temporary hack that follows the proposed API for BDD test frameworks,\n    // i.e. describe(\'Some Controller\', testFor(\'controller:some/controller\', function() { ... }));\n    // Provides a this.subject() helper like ember-qunit gives with moduleFor.\n    __exports__[\"default\"] = function testFor(fullName, body) {\n        function factory() {\n            var container = isolatedContainer([fullName]);\n            return container.lookupFactory(fullName);\n        }\n\n        return function() {\n            helper(\'subject\', function(options) {\n                return factory().create(options);\n            });\n\n            body();\n        };\n    }\n\n    // Copied from https://github.com/rpflorence/ember-qunit/blob/master/lib/isolated-container.js\n    function isolatedContainer(fullNames) {\n        var container = new Ember.Container();\n        container.optionsForType(\'component\', { singleton: false });\n        container.optionsForType(\'view\', { singleton: false });\n        container.optionsForType(\'template\', { instantiate: false });\n        container.optionsForType(\'helper\', { instantiate: false });\n        container.register(\'component-lookup:main\', Ember.ComponentLookup);\n        for (var i = fullNames.length; i > 0; i--) {\n            var fullName = fullNames[i - 1];\n            container.register(fullName, resolver.resolve(fullName));\n        }\n        return container;\n    }\n  });//# sourceURL=code-test-bot-app/tests/helpers/test-for.js");

;eval("define(\"code-test-bot-app/tests/helpers/utils\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function randomElement(arr) {\n        return arr[Math.floor(Math.random()*arr.length)];\n    }\n\n    __exports__.randomElement = randomElement;\n  });//# sourceURL=code-test-bot-app/tests/helpers/utils.js");

;eval("define(\"code-test-bot-app/tests/integration/assessments/assessments-new-integration-test\", \n  [\"ember-qunit\",\"code-test-bot-app/tests/helpers/start-app\",\"code-test-bot-app/tests/helpers/authentication\",\"code-test-bot-app/tests/fixtures\",\"code-test-bot-app/tests/helpers/fake-server\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var startAppEphemeral = __dependency2__.startAppEphemeral;\n    var resetApp = __dependency2__.resetApp;\n    var authenticateSession = __dependency3__.authenticateSession;\n    var defineServerFixture = __dependency4__.defineServerFixture;\n    var fakeServer = __dependency5__[\"default\"];\n\n    module(\'Integration - assessments/new\', {\n        setup: function() {\n            startAppEphemeral();\n\n            fakeServer.start();\n            fakeServer.respondWith(\'GET\', \'http://localhost:3000/sessions/current\', [200, { \"Content-Type\": \"application/json\" }, JSON.stringify({ \n                session: { id: 1, user_id: 1 }, \n                users: [{id: 1, name: \'User1\', role_id: 1}],\n                roles: [{id: 1, name: \'Assessor\'}]\n            })]);\n\n            visit(\'/auth/login\').then(authenticateSession);\n        },\n        teardown: function() {\n            resetApp();\n            fakeServer.stop();\n        }\n    });\n\n    test(\'displays a form to create an assessment\', function() {\n        expect(4);\n\n        fakeServer.jsonSuccess(\'GET\', \'http://localhost:3000/assessments?submission_id=1&assessor_id=1&include_unpublished=true\', { assessments: []});\n\n        visit(\'/submissions/1/assessments/new\');\n        andThen(function() {\n            equal(find(\'select.language\').val(), 1);\n            equal(find(\'select.level\').val(), 1);\n            equal(find(\'textarea.email-text\').val(), \'some text\');\n            equal(find(\'a.zipfile\').attr(\'href\'), \'url to file\');\n        });\n    });\n\n    test(\'saves the assessment and redirects to the submission details page\', function() {\n        expect(1);\n\n        fakeServer.jsonSuccess(\'POST\', \'http://localhost:3000/assessments\', { assessment: { id: 33, score: 1, notes: \'notes\', submission_id: 1 } });\n        fakeServer.jsonSuccess(\'PUT\', \'http://localhost:3000/assessments/33\', { assessment: { id: 33, score: 1, notes: \'notes\', submission_id: 1 } });\n        fakeServer.jsonSuccess(\'GET\', \'http://localhost:3000/assessments?submission_id=1&assessor_id=1&include_unpublished=true\', { assessments: []});\n        fakeServer.jsonSuccess(\'GET\', \'http://localhost:3000/assessments?submission_id=1&include_unpublished=true\', { assessments: [] });\n\n        visit(\'/submissions/1/assessments/new\');\n        fillIn(\'input.score\', \'1\');\n        fillIn(\'textarea.notes\', \'notes\');\n        click(\'button.create\');\n        andThen(function() {\n            equal(currentURL(), \'/submissions/1\');\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/integration/assessments/assessments-new-integration-test.js");

;eval("define(\"code-test-bot-app/tests/integration/auth-complete-integration-test\", \n  [\"ember-qunit\",\"code-test-bot-app/tests/helpers/start-app\",\"code-test-bot-app/tests/helpers/authentication\",\"code-test-bot-app/tests/helpers/fake-server\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var startAppEphemeral = __dependency2__.startAppEphemeral;\n    var resetApp = __dependency2__.resetApp;\n    var getSession = __dependency3__.getSession;\n    var fakeServer = __dependency4__[\"default\"];\n\n    module(\'Auth Complete Integration\', {\n        setup: function() {\n            fakeServer.start();\n            fakeServer.respondWith(\'GET\', \'http://localhost:3000/sessions/current\', [200, { \"Content-Type\": \"application/json\" }, JSON.stringify({ \n                session: { id: 1, user_id: 1 }, \n                users: [{id: 1, name: \'User1\', role_id: 1}],\n                roles: [{id: 1, name: \'Assessor\'}]\n            })]);\n            startAppEphemeral();\n        },\n        teardown: function() {\n            resetApp();\n            fakeServer.stop();\n        }\n    });\n\n    var url = \'/auth/complete?token=token1234&expires_at=5000&expires=true\';\n\n    test(\'authenticates the session with the OutOfBandTokenAuthenticator\', function() {\n        expect(3);\n\n        visit(url);\n        andThen(function() {\n            var session = getSession();\n            equal(session.get(\'access_token\'), \'token1234\');\n            equal(session.get(\'expires_at\'), 5000000);\n            equal(session.get(\'expires\'), true);\n        });\n    });\n\n    test(\'transitions to the previously attempted transition after authentication\', function() {\n        expect(1);\n\n        var store = CodeTestBotApp.get(\'dataStore\');\n        store.setItem(\'attemptedTransition\', \'/submissions/new\');\n\n        visit(url);\n        andThen(function() {\n            equal(currentURL(), \'/submissions/new\');\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/integration/auth-complete-integration-test.js");

;eval("define(\"code-test-bot-app/tests/integration/authenticated-routes-test\", \n  [\"ember-qunit\",\"code-test-bot-app/tests/helpers/start-app\",\"code-test-bot-app/tests/helpers/authentication\",\"code-test-bot-app/tests/helpers/fake-server\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    var startAppEphemeral = __dependency2__.startAppEphemeral;\n    var resetApp = __dependency2__.resetApp;\n    var authenticateSession = __dependency3__.authenticateSession;\n    var fakeServer = __dependency4__[\"default\"];\n\n    module(\'Authenticated Route\', {\n        setup: function() {\n            fakeServer.start();\n            startAppEphemeral();\n        },\n        teardown: function() {\n            resetApp();\n            fakeServer.stop();\n        }\n    });\n\n    test(\'when session not authenticated, saves transition intent and transitions to login\', function() {\n        expect(2);\n\n        var store = CodeTestBotApp.get(\'dataStore\');\n\n        visit(\'/submissions/new\');\n        andThen(function() {\n            equal(store.getItem(\'attemptedTransition\'), \'/submissions/new\');\n            equal(currentRouteName(), \'auth.login\');\n        });\n    });\n\n    test(\'when session is authenticated, continues transition like normal\', function() {\n        expect(1);\n\n        fakeServer.respondWith(\'GET\', \'http://localhost:3000/sessions/current\', [200, { \"Content-Type\": \"application/json\" }, JSON.stringify({ \n            session: { id: 1, user_id: 1 }, \n            users: [{id: 1, name: \'User1\', role_id: 1}],\n            roles: [{id: 1, name: \'Assessor\'}]\n        })]);\n        visit(\'/auth/login\').then(authenticateSession);\n\n        visit(\'/submissions/new\');\n        andThen(function() {\n            equal(currentRouteName(), \'submissions.new\');\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/integration/authenticated-routes-test.js");

;eval("define(\"code-test-bot-app/tests/integration/authentication/expired-credentials-integration-test\", \n  [\"code-test-bot-app/tests/helpers/start-app\",\"code-test-bot-app/tests/helpers/authentication\",\"code-test-bot-app/tests/helpers/fake-server\"],\n  function(__dependency1__, __dependency2__, __dependency3__) {\n    \"use strict\";\n    var startAppEphemeral = __dependency1__.startAppEphemeral;\n    var resetApp = __dependency1__.resetApp;\n    var authenticateSession = __dependency2__.authenticateSession;\n    var fakeServer = __dependency3__[\"default\"];\n\n    describe(\'Integration - expired credentials\', function() {\n        before(function() {\n            fakeServer.start();\n            fakeServer.respondWith(\'GET\', \'http://localhost:3000/sessions/current\', [200, { \"Content-Type\": \"application/json\" }, JSON.stringify({ \n                session: { id: 1, user_id: 1 }, \n                users: [{id: 1, name: \'User1\', role_id: 1}],\n                roles: [{id: 1, name: \'Assessor\'}]\n            })]);\n            startAppEphemeral();\n        });\n\n        after(function() {\n            resetApp();\n            fakeServer.stop();\n        });\n\n        context(\'when server responds with invalid_token\', function() {\n            before(function() {\n                fakeServer.respondWith(\'GET\', \'http://localhost:3000/submissions/2\', [401, { \'WWW-Authenticate\': \'Bearer error=\"invalid_token\"\' }, \'\']);\n                visit(\'/auth/login\').then(authenticateSession);\n            });\n\n            it(\'redirects to the login page\', function() {\n                expect(1);\n                console.log(\'out\');\n                visit(\'/submissions/2\');\n                andThen(function() {\n                    console.log(\'out2\');\n                    expect(currentRouteName()).to.equal(\'auth.login\');\n                });\n            });\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/integration/authentication/expired-credentials-integration-test.js");

;eval("define(\"code-test-bot-app/tests/integration/submissions/submissions-integration-test\", \n  [\"code-test-bot-app/tests/helpers/start-app\",\"code-test-bot-app/tests/helpers/authentication\",\"code-test-bot-app/tests/helpers/fake-server\",\"code-test-bot-app/tests/helpers/dom-helpers\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__) {\n    \"use strict\";\n    var startAppEphemeral = __dependency1__.startAppEphemeral;\n    var resetApp = __dependency1__.resetApp;\n    var authenticateSession = __dependency2__.authenticateSession;\n    var fakeServer = __dependency3__[\"default\"];\n\n    describe(\'Integration - submissions\', function() {\n        before(function() {\n            fakeServer.start();\n            startAppEphemeral();\n            fakeServer.respondWith(\'GET\', \'http://localhost:3000/sessions/current\', [200, { \"Content-Type\": \"application/json\" }, JSON.stringify({ \n                session: { id: 1, user_id: 1 }, \n                users: [{id: 1, name: \'User1\', role_id: 1}],\n                roles: [{id: 1, name: \'Assessor\'}]\n            })]);\n            visit(\'/auth/login\').then(authenticateSession);\n        });\n\n        after(function() {\n            resetApp();\n            fakeServer.stop();\n        });\n\n        describe(\'new route\', function() {\n            before(function() { visit(\'/submissions/new\'); });\n\n            context(\'when leaving route with unsaved submission\', function() {\n                before(function() {\n                    fakeServer.jsonSuccess(\'GET\', \'http://localhost:3000/submissions\', { submissions: [] });\n                    visit(\'/submissions\');\n                });\n\n                it(\'deletes the unsaved record\', function() {\n                    expect(1);\n\n                    andThen(function() {\n                        expect(find(\'tr.submission\').length).to.equal(0);\n                    });\n                });\n            });\n        });\n\n        describe(\'detail page\', function() {\n            context(\'when user has not submitted an assessment\', function() {\n                before(function() {\n                    fakeServer.jsonSuccess(\'GET\', \'http://localhost:3000/assessments?submission_id=1&include_unpublished=true\', { assessments: [\n                        { id: 2, score: 4, notes: \'notes\', submission_id: 1, assessor_id: 3 }\n                    ]});\n                });\n\n                it(\'shows a no assessments message\', function() {\n                    expect(1);\n\n                    visit(\'/submissions/1\');\n                    andThen(function() {\n                        shouldContainText(\'table.assessments\', \'No assessments\');\n                    });\n                });\n            });\n\n            context(\'when assessments exist\', function() {\n                before(function() {\n                    fakeServer.jsonSuccess(\'GET\', \'http://localhost:3000/assessments?submission_id=1&include_unpublished=true\', { assessments: [\n                        { id: 1, score: 2, notes: \'notes\', submission_id: 1, assessor_id: 2, published: true },\n                        { id: 2, score: 4, notes: \'notes\', submission_id: 1, assessor_id: 3, published: true }\n                    ]});\n                });\n\n                /*\n                it(\'shows a list of assessments\', function() {\n                    expect(1);\n\n                    visit(\'/submissions/1\');\n                    andThen(function() {\n                        expect(find(\'tr.assessment\').length).to.equal(2);\n                    });\n                });\n                */\n\n                it(\'shows an average score\', function() {\n                    expect(1);\n\n                    visit(\'/submissions/1\');\n                    andThen(function() {\n                        expect(find(\'p.score\').text()).to.equal(\'3\');\n                    });\n                });\n            });\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/integration/submissions/submissions-integration-test.js");

;eval("define(\"code-test-bot-app/tests/integration/users/users-index-integration-test\", \n  [],\n  function() {\n    \"use strict\";\n    /* Commented out until we can figure out why user role is so sketchy in tests.\n     \n    import { test } from \'ember-qunit\';\n    import { startAppEphemeral, resetApp } from \'../../helpers/start-app\';\n    import { authenticateSession } from \'../../helpers/authentication\';\n    import fakeServer from \'../../helpers/fake-server\';\n\n    module(\'Users Index Integration\', {\n        setup: function() {\n            fakeServer.start();\n            fakeServer.respondWith(\'GET\', \'http://localhost:3000/sessions/current\', [200, { \"Content-Type\": \"application/json\" }, JSON.stringify({ \n                session: { id: 1, user_id: 2 }, \n                users: [{id: 2, name: \'User2\', role_id: 3}],\n                roles: [{id: 3, name: \'Administrator\'}]\n            })]);\n            startAppEphemeral();\n            visit(\'/auth/login\').then(authenticateSession);\n        },\n        teardown: function() {\n            resetApp();\n            fakeServer.stop();\n        }\n    });\n\n    test(\'displays a list of users\', function() {\n        expect(2);\n\n        visit(\'/admin/users\');\n        andThen(function() {\n            var names = [];\n            find(\'td.name\').each(function() {\n                names.push($(this).text());\n            });\n\n            equal(names[0], \'User2\');\n            equal(names[1], \'User1\');\n        });\n    });\n\n    test(\'can transition to user edit\', function() {\n        expect(2);\n\n        visit(\'/admin/users\');\n        click(\'.button[href=\"/admin/users/1/edit\"]\');\n        andThen(function() {\n            equal(currentRouteName(), \'user.edit\');\n            equal(currentURL(), \'/admin/users/1/edit\');\n        });\n    });\n\n    test(\'edit button is enabled for editable users\', function() {\n        expect(1);\n\n        visit(\'/admin/users\');\n        andThen(function() {\n            var button = find(\'a.button[href=\"/admin/users/1/edit\"]\');\n            ok(!button.hasClass(\'disabled\'), \'Edit button should not be disabled\');\n        });\n    });\n\n    test(\'edit button is disabled for uneditable users\', function() {\n        expect(1);\n\n        visit(\'/admin/users\');\n        andThen(function() {\n            var button = find(\'a.button[href=\"/admin/users/2/edit\"]\');\n            ok(button.hasClass(\'disabled\'), \'Edit button should be disabled\');\n        });\n    });\n    */\n  });//# sourceURL=code-test-bot-app/tests/integration/users/users-index-integration-test.js");

;eval("define(\"code-test-bot-app/tests/test-helper\", \n  [\"code-test-bot-app/tests/helpers/resolver\",\"code-test-bot-app/lib/window-location-helper\",\"code-test-bot-app/tests/fixtures\"],\n  function(__dependency1__, __dependency2__, __dependency3__) {\n    \"use strict\";\n    /* globals sinon */\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    Ember.testing = true;\n\n    var resolver = __dependency1__[\"default\"];\n    require(\'ember-qunit\').setResolver(resolver);\n\n    var WindowLocationHelper = __dependency2__[\"default\"];\n    sinon.stub(WindowLocationHelper, \'setLocation\');\n\n    function exists(selector) {\n      return !!window.find(selector).length;\n    }\n\n    function getAssertionMessage(actual, expected, message) {\n      return message || QUnit.jsDump.parse(expected) + \" expected but was \" + QUnit.jsDump.parse(actual);\n    }\n\n    function equal(actual, expected, message) {\n      message = getAssertionMessage(actual, expected, message);\n      QUnit.equal.call(this, actual, expected, message);\n    }\n\n    function strictEqual(actual, expected, message) {\n      message = getAssertionMessage(actual, expected, message);\n      QUnit.strictEqual.call(this, actual, expected, message);\n    }\n\n    window.exists = exists;\n    window.equal = equal;\n    window.strictEqual = strictEqual;\n\n    QUnit.config.testTimeout = 5000;\n  });//# sourceURL=code-test-bot-app/tests/test-helper.js");

;eval("define(\"code-test-bot-app/tests/test-loader\", \n  [],\n  function() {\n    \"use strict\";\n    // TODO: load based on params\n    Ember.keys(requirejs.entries).forEach(function(entry) {\n        if ((/\\-test/).test(entry)) {\n            require(entry, null, null, true);\n        }\n    });\n  });//# sourceURL=code-test-bot-app/tests/test-loader.js");

;eval("define(\"code-test-bot-app/tests/unit/controllers/assessment/assessment-edit-controller-test\", \n  [\"ember-qunit\",\"code-test-bot-app/tests/helpers/utils\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    /* globals moment */\n\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n    var randomElement = __dependency2__.randomElement;\n\n    var controller, createdAt, assessment, model, user, assessor;\n    moduleFor(\'controller:assessment/edit\', \'Assessment Edit Controller\', {\n        needs: [\'controller:application\'],\n\n        setup: function() {\n            controller = this.subject();\n            createdAt = moment();\n            assessment = Ember.Object.create({\n                score: 1,\n                notes: \'some notes\',\n                createdAtMoment: createdAt\n            });\n\n            model = Ember.Object.create({\n                assessment: assessment\n            });\n\n            user = Ember.Object.create({\n                id: 1,\n                name: \'Bob\'\n            });\n\n            assessor = Ember.Object.create({\n                id: 1,\n                name: \'Bob\'\n            });\n\n            controller.set(\'content\', assessment);\n            controller.set(\'user\', user);\n            controller.set(\'assessor\', assessor);\n        }\n    });\n\n    test(\'ownAssessment is false if user id and assessor id dont match\', function() {\n        assessor.id = 5;\n        user.id = 1;\n        equal(controller.get(\'ownAssessment\'), false);\n    });\n\n    test(\'notOwnAssessment is true if user id and assessor id dont match\', function() {\n        assessor.id = 5;\n        user.id = 1;\n        equal(controller.get(\'notOwnAssessment\'), true);\n    });\n\n    test(\'ownAssessment is true if user id and assessor id match\', function() {\n        assessor.id = 2;\n        user.id = 2;\n        equal(controller.get(\'ownAssessment\'), true);\n    });\n\n    test(\'notOwnAssessment is false if user id and assessor id match\', function() {\n        assessor.id = 5;\n        user.id = 5;\n        equal(controller.get(\'notOwnAssessment\'), false);\n    });\n  });//# sourceURL=code-test-bot-app/tests/unit/controllers/assessment/assessment-edit-controller-test.js");

;eval("define(\"code-test-bot-app/tests/unit/controllers/assessment/assessment-index-controller-test\", \n  [\"ember-qunit\",\"code-test-bot-app/tests/helpers/utils\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    /* globals moment */\n\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n    var randomElement = __dependency2__.randomElement;\n\n    var controller, createdAt, assessment, model, user, assessor;\n    moduleFor(\'controller:assessment/index\', \'Assessment Index Controller\', {\n        needs: [\'controller:application\'],\n\n        setup: function() {\n            controller = this.subject();\n            createdAt = moment();\n            assessment = Ember.Object.create({\n                score: 1,\n                notes: \'some notes\',\n                createdAtMoment: createdAt\n            });\n\n            model = Ember.Object.create({\n                assessment: assessment\n            });\n\n            user = Ember.Object.create({\n                id: 1,\n                name: \'Bob\'\n            });\n\n            assessor = Ember.Object.create({\n                id: 1,\n                name: \'Bob\'\n            });\n\n            controller.set(\'model\', model);\n            controller.set(\'createdAtMoment\', createdAt);\n            controller.set(\'user\', user);\n            controller.set(\'assessor\', assessor);\n        }\n    });\n\n    test(\'createdAtRecently is true for assessment created one minute ago\', function() {\n        createdAt = createdAt.minutes(-1);\n        equal(controller.get(\'assessmentCreatedRecently\'), true);\n    });\n\n    test(\'createdAtRecently is false for assessment created yesterday\', function() {\n        createdAt = createdAt.days(-1);\n        equal(controller.get(\'assessmentCreatedRecently\'), false);\n    });\n\n    test(\'ownAssessment is true when user and assessor have the same id\', function() {\n        equal(controller.get(\'ownAssessment\'), true);\n    });\n\n    test(\'ownAssessment is false when user and assessor have different ids\', function() {\n        assessor.id = 5;\n        equal(controller.get(\'ownAssessment\'), false);\n    });\n\n    test(\'canEdit is true when user and assessor have the same id and assessment was created recently\', function() {\n        createdAt = createdAt.minutes(-1);\n        equal(controller.get(\'canEdit\'), true);\n    });\n\n    test(\'canEdit is false when user and assessor have the same id and assessment was not created recently\', function() {\n        createdAt = createdAt.days(-1);\n        equal(controller.get(\'canEdit\'), false);\n    });\n\n    test(\'canEdit is false when user and assessor do not have the same id and assessment was created recently\', function() {\n        createdAt = createdAt.minutes(-1);\n        assessor.id = 5;\n        equal(controller.get(\'canEdit\'), false);\n    });\n  });//# sourceURL=code-test-bot-app/tests/unit/controllers/assessment/assessment-index-controller-test.js");

;eval("define(\"code-test-bot-app/tests/unit/controllers/assessments/assessments-new-controller-test\", \n  [\"code-test-bot-app/tests/helpers/test-for\",\"code-test-bot-app/tests/helpers/utils\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var testFor = __dependency1__[\"default\"];\n    var randomElement = __dependency2__.randomElement;\n\n    describe(\'Assessments New Controller\', testFor(\'controller:assessments/new\', function() {\n        var controller;\n        var model, assessment;\n\n        before(function() {\n            controller = this.subject();\n\n            assessment = Ember.Object.create({\n                score: 1,\n                notes: \'some notes\'\n            });\n\n            controller.set(\'model\', assessment);\n        });\n\n        describe(\'#isFormIncomplete\', function() {\n            context(\'when all fields filled\', function() {\n                it(\'is false\', function() {\n                    expect(controller.get(\'isFormIncomplete\')).to.be.false();\n                });\n            });\n\n            context(\'when any field empty\', function() {\n                before(function() {\n                    var fields = [\'score\', \'notes\'];\n                    assessment.set(randomElement(fields), null);\n                });\n\n                it(\'is true\', function() {\n                    expect(controller.get(\'isFormIncomplete\')).to.be.true();\n                });\n            });\n        });\n    }));\n  });//# sourceURL=code-test-bot-app/tests/unit/controllers/assessments/assessments-new-controller-test.js");

;eval("define(\"code-test-bot-app/tests/unit/controllers/auth/auth-login-controller-test\", \n  [\"ember-qunit\",\"code-test-bot-app/lib/window-location-helper\",\"code-test-bot-app/tests/helpers/test-for\"],\n  function(__dependency1__, __dependency2__, __dependency3__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    var WindowLocationHelper = __dependency2__[\"default\"];\n    var testFor = __dependency3__[\"default\"];\n\n    describe(\'Auth Login Controller\', testFor(\'controller:auth/login\', function() {\n        describe(\'login action\', function() {\n            it(\'redirects to the auth_uri from the model\', function() {\n                var uri = \'/a/url\';\n                var model = Ember.Object.create({ auth_uri: uri });\n                var controller = this.subject();\n\n                Ember.run(function() {\n                    controller.set(\'model\', model);\n                    controller.send(\'login\');\n                });\n\n                expect(WindowLocationHelper.setLocation.calledWith(uri)).to.be.true();\n            });\n        });\n    }));\n  });//# sourceURL=code-test-bot-app/tests/unit/controllers/auth/auth-login-controller-test.js");

;eval("define(\"code-test-bot-app/tests/unit/controllers/submissions/submissions-new-controller-test\", \n  [\"ember-qunit\",\"code-test-bot-app/tests/helpers/utils\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n    var randomElement = __dependency2__.randomElement;\n\n    var controller, submission, model;\n    moduleFor(\'controller:submissions/new\', \'Submissions New Controller\', {\n        setup: function() {\n            controller = this.subject();\n            submission = Ember.Object.create({emailText: \'text\', zipfile: \'file\', save: function(){}});\n            model = Ember.Object.create({\n                submission: submission\n            });\n            controller.set(\'model\', model);\n            controller.set(\'candidateName\', \'Bob\');\n            controller.set(\'candidateEmail\', \'bob@example.com\');\n        }\n    });\n\n    test(\'isFormIncomplete is false when all fields are filled\', function() {\n        equal(controller.get(\'isFormIncomplete\'), false);\n    });\n\n    test(\'isFormIncomplete is true when any field is empty\', function() {\n        var fields = [\'submission.emailText\', \'submission.zipfile\', \'candidateName\', \'candidateEmail\'];\n        var field = randomElement(fields);\n\n        Ember.run(function() {\n            controller.set(field, null);\n        });\n\n        equal(controller.get(\'isFormIncomplete\'), true);\n    });\n  });//# sourceURL=code-test-bot-app/tests/unit/controllers/submissions/submissions-new-controller-test.js");

;eval("define(\"code-test-bot-app/tests/unit/controllers/user/user-edit-controller-test\", \n  [\"code-test-bot-app/tests/helpers/test-for\",\"code-test-bot-app/tests/helpers/utils\",\"code-test-bot-app/tests/helpers/data\"],\n  function(__dependency1__, __dependency2__, __dependency3__) {\n    \"use strict\";\n    var testFor = __dependency1__[\"default\"];\n    var randomElement = __dependency2__.randomElement;\n    var injectFakeStore = __dependency3__.injectFakeStore;\n\n    describe(\'User Edit Controller\', testFor(\'controller:user/edit\', function() {\n        var controller;\n        var model, role, new_role, user, store;\n\n        before(function() {\n            controller = this.subject();\n            store = injectFakeStore(controller);\n\n            role = Ember.Object.create({\n                id: 1,\n                name: \'Administrator\'\n            });\n\n            new_role = Ember.Object.create({\n                id: 2,\n                name: \'Assessor\'\n            });\n\n            user = Ember.Object.create({\n                id: 1,\n                name: \'Bob\',\n                email: \'bob@bob.com\',\n                role: role\n            });\n\n            controller.set(\'content\', user);\n            controller.set(\'selectedRole\', new_role);\n        });\n\n        describe(\'#changeRole\', function() {\n\n            context(\'when role is selected\', function() {\n                before(function() {\n                    var find = sinon.stub(store, \'find\');\n                    find.withArgs(\'user\').returns(user);\n                    user.reopen({\n                        save: sinon.spy()\n                    });\n                });\n\n                it(\'should have updated role for user\', function() {\n                    equal(user.get(\'role\'), role);\n                    Ember.run(function() {\n                        controller.send(\'changeRole\');\n                    });\n                    equal(user.get(\'role\'), new_role);\n                    equal(user.save.callCount, 1);\n                });\n            });\n        });\n    }));\n  });//# sourceURL=code-test-bot-app/tests/unit/controllers/user/user-edit-controller-test.js");

;eval("define(\"code-test-bot-app/tests/unit/lib/auth/www-authenticate-header-test\", \n  [\"code-test-bot-app/lib/auth/www-authenticate-header\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var WWWAuthenticateHeader = __dependency1__[\"default\"];\n\n    describe(\'WWWAuthenticateHeader\', function() {\n        describe(\'::parse\', function() {\n            context(\'when given a valid xhr response\', function() {\n                lazy(\'xhr\', function() {\n                    return {\n                        status: 401,\n                        getResponseHeader: function() {\n                            return \'Bearer error=\"invalid_token\", error_description=\"Access Token Expired\"\';\n                        }\n                    };\n                });\n\n                it(\'returns a new WWWAuthenticateHeader instance\', function() {\n                    var result = WWWAuthenticateHeader.parse(this.xhr);\n\n                    expect(result).to.be.defined();\n                    expect(result instanceof WWWAuthenticateHeader).to.be.true();\n                });\n            });\n        });\n\n        context(\'when empty\', function() {\n            lazy(\'header\', function() {\n                return WWWAuthenticateHeader.parse({\n                    status: 401,\n                    getResponseHeader: function() {\n                        return \'Bearer\';\n                    }\n                });\n            });\n\n            describe(\'#isEmpty\', function() {\n                it(\'is true\', function() {\n                    expect(this.header.get(\'isEmpty\')).to.be.true();\n                });\n            });\n\n            describe(\'#isInvalidToken\', function() {\n                it(\'is false\', function() {\n                    expect(this.header.get(\'isInvalidToken\')).to.be.false();\n                });\n            });\n        });\n\n        context(\'when error=\"invalid_token\"\', function() {\n            lazy(\'header\', function() {\n                return WWWAuthenticateHeader.parse({\n                    status: 401,\n                    getResponseHeader: function() {\n                        return \'Bearer error=\"invalid_token\", error_description=\"Access Token Expired\"\';\n                    }\n                });\n            });\n\n            describe(\'#isEmpty\', function() {\n                it(\'is false\', function() {\n                    expect(this.header.get(\'isEmpty\')).to.be.false();\n                });\n            });\n\n            describe(\'#isInvalidToken\', function() {\n                it(\'is true\', function() {\n                    expect(this.header.get(\'isInvalidToken\')).to.be.true();\n                });\n            });\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/unit/lib/auth/www-authenticate-header-test.js");

;eval("define(\"code-test-bot-app/tests/unit/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator-test\", \n  [\"ember-qunit\",\"code-test-bot-app/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    module(\'OutOfBandTokenAuthenticator\');\n\n    var OutOfBandTokenAuthenticator = Ember.SimpleAuth.Authenticators.OutOfBandTokenAuthenticator;\n\n    test(\'restore: returns a promise that rejects if the access_token is empty\', function() {\n        expect(2);\n\n        var badData1 = { };\n        var badData2 = { access_token: \'\' };\n        var authenticator = OutOfBandTokenAuthenticator.create();\n\n        Ember.run(function() {\n            authenticator.restore(badData1).then(null, function() {\n                ok(true);\n            });\n            authenticator.restore(badData2).then(null, function() {\n                ok(true);\n            });\n        });\n    });\n\n    test(\'restore: returns a promise that rejects if the access token is expired\', function() {\n        expect(1);\n\n        var now = (new Date()).getTime();\n        var expiredToken = { access_token: \'token\', expires_at: now - 100 };\n        var authenticator = OutOfBandTokenAuthenticator.create();\n\n        Ember.run(function() {\n            authenticator.restore(expiredToken).then(null, function() {\n                ok(true);\n            });\n        });\n    });\n\n    test(\'restore: returns a promise that resolves if the access token exists and is not expired\', function() {\n        var now = (new Date()).getTime();\n        var goodToken = { access_token: \'token\', expires_at: now + 100 };\n        var authenticator = OutOfBandTokenAuthenticator.create();\n\n        Ember.run(function() {\n            authenticator.restore(goodToken).then(function(result) {\n                deepEqual(result, goodToken);\n            }, null);\n        });\n    });\n\n    test(\'authenticate: returns a promise that resolves with the expires_at value normalized to milliseconds\', function() {\n        var token = { access_token: \'token\', expires_at: 5, expires: \'true\' };\n        var authenticator = OutOfBandTokenAuthenticator.create();\n\n        Ember.run(function() {\n            authenticator.authenticate(token).then(function(result) {\n                deepEqual(result, { access_token: \'token\', expires_at: 5000, expires: true });\n            });\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/unit/lib/ember-simple-auth/authenticators/out-of-band-token-authenticator-test.js");

;eval("define(\"code-test-bot-app/tests/unit/lib/stores/ephemeral-test\", \n  [\"ember-qunit\",\"code-test-bot-app/lib/stores/ephemeral\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var EphemeralStore = __dependency2__[\"default\"];\n\n    var testKey = \'test\';\n\n    describe(\'EphemeralStore\', function() {\n        var store;\n        before(function() {\n            store = EphemeralStore.create();\n        });\n\n        describe(\'#getItem\', function() {\n            it(\'gets a saved value\', function() {\n                var data = {};\n                data[testKey] = \'val\';\n                store.set(\'data\', data);\n\n                expect(store.getItem(testKey)).to.equal(\'val\');\n            });\n        });\n\n        describe(\'#setItem\', function() {\n            it(\'saves a value\', function() {\n                store.setItem(testKey, \'val\');\n\n                expect(store.getItem(testKey)).to.equal(\'val\');\n            });\n        });\n\n        describe(\'#removeItem\', function() {\n            it(\'removes a saved value\', function() {\n                store.setItem(testKey, \'val\');\n                store.removeItem(testKey);\n\n                expect(store.getItem(testKey)).to.equal(undefined);\n            });\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/unit/lib/stores/ephemeral-test.js");

;eval("define(\"code-test-bot-app/tests/unit/lib/stores/local-test\", \n  [\"ember-qunit\",\"code-test-bot-app/lib/stores/local\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    /* globals localStorage */\n\n    var test = __dependency1__.test;\n    var LocalStore = __dependency2__[\"default\"];\n\n    var testKey = \'test\';\n    describe(\'LocalStore\', function() {\n        var store;\n        before(function() {\n            store = LocalStore.create();\n        });\n\n        after(function() {\n            localStorage.removeItem(testKey);\n        });\n\n        describe(\'#getItem\', function() {\n            it(\'gets a value from localStorage\', function() {\n                localStorage.setItem(testKey, \'val\');\n\n                expect(store.getItem(testKey)).to.equal(\'val\');\n            });\n        });\n\n        describe(\'#setItem\', function() {\n            it(\'saves a value to localStorage\', function() {\n                store.setItem(testKey, \'val\');\n\n                expect(localStorage.getItem(testKey)).to.equal(\'val\');\n            });\n        });\n\n        describe(\'#removeItem\', function() {\n            it(\'removes a value from localStorage\', function() {\n                store.setItem(testKey, \'val\');\n                store.removeItem(testKey);\n                expect(store.getItem(testKey)).to.equal(null);\n            });\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/unit/lib/stores/local-test.js");

;eval("define(\"code-test-bot-app/tests/unit/mixins/auto-saveable-test\", \n  [\"code-test-bot-app/mixins/auto-saveable\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var AutoSaveable = __dependency1__[\"default\"];\n\n    describe(\'AutoSaveable\', function() {\n        var DummyClass = Ember.ObjectProxy.extend(AutoSaveable, { isSaving: false, save: function() {} });\n        var instance, content;\n        before(function() {\n            content = Ember.Object.createWithMixins(Ember.Evented);\n            instance = DummyClass.create({ content: content });\n        });\n\n        describe(\'#setUnknownProperty\', function() {\n            context(\'when already saving\', function() {\n                before(function() {\n                    instance.set(\'isSaving\', true);\n                    sinon.stub(content, \'one\');\n                });\n\n                it(\'stores the data in a buffer\', function() {\n                    instance.set(\'testProperty\', \'testValue\');\n\n                    expect(instance.__bufferedProperties__.testProperty).to.equal(\'testValue\');\n                });\n\n                it(\'sets a one time handler for the content loaded event to save the buffered data\', function() {\n                    instance.set(\'testProperty\', \'testValue\');\n\n                    ok(content.one.calledWith(\'isLoaded\', instance, instance.tryAutoSave));\n                });\n            });\n\n            context(\'when ready to save\', function() {\n                before(function() {\n                    instance.set(\'isSaving\', false);\n                    sinon.stub(instance, \'tryAutoSave\');\n                });\n\n                it(\'calls tryAutoSave\', function() {\n                    instance.set(\'testProperty\', \'testValue\');\n\n                    ok(instance.tryAutoSave.calledOnce, \'should call tryAutoSave\');\n                });\n            });\n        });\n\n        describe(\'#tryAutoSave\', function() {\n            before(function() {\n                sinon.stub(instance, \'save\');\n                sinon.stub(content, \'setProperties\');\n                sinon.stub(Ember.run, \'debounce\');\n                instance.__bufferedProperties__.testProperty = \'testValue\';\n            });\n\n            after(function() {\n               Ember.run.debounce.restore();\n            });\n\n            it(\'calls setProperties on the proxied content with the buffered properties\', function() {\n                instance.tryAutoSave();\n\n                ok(content.setProperties.calledWithMatch({ testProperty: \'testValue\' }), \'should call setProperties with buffered properties\');\n            });\n\n            it(\'debounces a call to save\', function() {\n                instance.tryAutoSave();\n\n                ok(Ember.run.debounce.calledWith(instance, instance.save, instance.autoSaveWait), \'should debounce call to save\');\n            });\n\n            it(\'clears the buffer\', function() {\n                instance.tryAutoSave();\n\n                expect(instance.__bufferedProperties__).to.eql({});\n            });\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/unit/mixins/auto-saveable-test.js");

;eval("define(\"code-test-bot-app/tests/unit/routes/auth/auth-login-route-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'route:auth/login\', \'Auth Login Route\');\n\n    test(\'model queries the new session URI for the auth_uri\', function() {\n        var route = this.subject();\n\n        var expected = {auth_uri: \'testing_uri\'};\n\n        Ember.run(function() {\n            route.model().then(function(result) {\n                deepEqual(result, expected);\n            });\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/unit/routes/auth/auth-login-route-test.js");

;eval("define(\"code-test-bot-app/tests/unit/routes/submissions/submissions-index-route-test\", \n  [\"ember-qunit\",\"code-test-bot-app/tests/helpers/data\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    var injectFakeStore = __dependency2__.injectFakeStore;\n\n    moduleFor(\'route:submissions/index\', \'Submissions Index Route\');\n\n    test(\'model is a list of submissions\', function() {\n        var expectedSubmissions = \'expectedSubmissions\';\n\n        var route = this.subject();\n        var store = injectFakeStore(route);\n        sinon.stub(store, \'find\').withArgs(\'submission\').returns(expectedSubmissions);\n\n        Ember.run(function() {\n            var model = route.model();\n\n            equal(model, expectedSubmissions);\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/unit/routes/submissions/submissions-index-route-test.js");

;eval("define(\"code-test-bot-app/tests/unit/routes/submissions/submissions-new-route-test\", \n  [\"ember-qunit\",\"code-test-bot-app/tests/helpers/data\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    var injectFakeStore = __dependency2__.injectFakeStore;\n\n    moduleFor(\'route:submissions/new\', \'Submissions New Route\');\n\n    test(\'sets up the model with a new submission record, candidates, and languages\', function() {\n        var expectedSubmission = \'expectedSubmission\';\n        var expectedLevels = \'expectedLevels\';\n        var expectedLanguages = \'expectedLanguages\';\n\n        var route = this.subject();\n        var store = injectFakeStore(route);\n\n        var find = sinon.stub(store, \'find\');\n        find.withArgs(\'level\').returns(expectedLevels);\n        find.withArgs(\'language\').returns(expectedLanguages);\n\n        sinon.stub(store, \'createRecord\').returns(expectedSubmission);\n\n        Ember.run(function() {\n            var model = route.model();\n\n            equal(model.get(\'submission\'), expectedSubmission);\n            equal(model.get(\'levels\'), expectedLevels);\n            equal(model.get(\'languages\'), expectedLanguages);\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/unit/routes/submissions/submissions-new-route-test.js");

;eval("define(\"code-test-bot-app/tests/unit/utils/math-test\", \n  [\"code-test-bot-app/utils/math\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var cumulativeMovingAverage = __dependency1__.cumulativeMovingAverage;\n    var roundToNearestHalf = __dependency1__.roundToNearestHalf;\n\n    describe(\'Math Utils\', function() {\n        describe(\'cumulativeMovingAverage\', function() {\n            it(\'calculates a new average for an added item\', function() {\n                // avg([2,2]) == 2; avg([2,2,5]) == 3;\n                expect(cumulativeMovingAverage(2, 5, 2)).to.equal(3);\n            });\n\n            it(\'calculates a new average for a removed item\', function() {\n                expect(cumulativeMovingAverage(3, 5, 3, true)).to.equal(2);\n            });\n        });\n\n        describe(\'roundToNearestHalf\', function() {\n            it(\'does not change ints\', function() {\n                expect(roundToNearestHalf(1)).to.equal(1);\n            });\n\n            it(\'does not change numbers already at x.5\', function() {\n                expect(roundToNearestHalf(2.5)).to.equal(2.5);\n            });\n\n            it(\'rounds decimals to nearest half\', function() {\n                expect(roundToNearestHalf(2.1)).to.equal(2);\n                expect(roundToNearestHalf(2.3)).to.equal(2.5);\n                expect(roundToNearestHalf(2.6)).to.equal(2.5);\n                expect(roundToNearestHalf(2.8)).to.equal(3);\n            });\n        });\n    });\n  });//# sourceURL=code-test-bot-app/tests/unit/utils/math-test.js");

;eval("define(\"code-test-bot-app/views/candidates/index\", \n  [\"code-test-bot-app/views/foundation\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var FoundationView = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = FoundationView.extend();\n  });//# sourceURL=code-test-bot-app/views/candidates/index.js");

;eval("define(\"code-test-bot-app/views/foundation\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.View.extend({\n        didInsertElement: function() {\n            $(document).foundation();\n            this._super();\n        }\n    });\n  });//# sourceURL=code-test-bot-app/views/foundation.js");

;eval("define(\"code-test-bot-app/views/file-upload\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* globals FileReader */\n\n    __exports__[\"default\"] = Ember.TextField.extend({\n        tagName: \'input\',\n        attributeBindings: [\'name\'],\n        type: \'file\',\n        file: null,\n        fileName: null,\n        change: function(event) {\n            var self = this;\n            var reader = new FileReader();\n            reader.onload = function(event) {\n                Ember.run(function() {\n                    self.set(\'file\', event.target.result);\n                });\n            };\n            self.set(\'fileName\', event.target.files[0].name);\n            return reader.readAsDataURL(event.target.files[0]);\n        }\n    });\n  });//# sourceURL=code-test-bot-app/views/file-upload.js");

;eval("define(\"code-test-bot-app/views/menu\", \n  [\"code-test-bot-app/views/foundation\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var FoundationView = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = FoundationView.extend();\n  });//# sourceURL=code-test-bot-app/views/menu.js");

;eval("define(\"code-test-bot-app/views/saving-indicator\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    __exports__[\"default\"] = Ember.View.extend({\n        templateName: \'saving-indicator\',\n        message: \'\',\n        spinner: null,\n\n        didInsertElement: function() {\n            this.$().hide();\n            this.set(\'spinner\', this.$(\'.fa-spinner\'));\n        },\n\n        onSaveStatusChange: function() {\n            if (this.get(\'controller.isSaving\')) {\n                this.set(\'message\', \'Saving...\');\n                this.spinner.show();\n                this.$().show();\n            } else {\n                this.set(\'message\', \'Changes saved.\');\n                this.spinner.hide();\n                if (this.$().is(\':visible\')) {\n                    Ember.run.later(this.$(), function() {\n                        if (this) {\n                            this.fadeOut(\'slow\');\n                        }\n                    }, 2000);\n                }\n            }\n        }.observes(\'controller.isSaving\')\n    });\n  });//# sourceURL=code-test-bot-app/views/saving-indicator.js");

;eval("define(\"code-test-bot-app/views/secured/edit\", \n  [\"code-test-bot-app/views/foundation\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var FoundationView = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = FoundationView.extend();\n  });//# sourceURL=code-test-bot-app/views/secured/edit.js");

;eval("define(\"code-test-bot-app/views/submission/action-menu\", \n  [\"code-test-bot-app/router\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Router = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n        templateName: \'submission/action-menu\',\n\n        dropdownId: function() {\n            return \'drop-menu-\' + this.elementId;\n        }.property(),\n\n        mainLink: function() {\n            // Can\'t just use link-to helper because it will preempt click handling from Foundation\n            // (i.e. it will just redirect to the route instead of dropping down the menu)\n            return Router.router.generate(\'submission.index\', this.get(\'context\'));\n        }.property(\'context\')\n    });\n  });//# sourceURL=code-test-bot-app/views/submission/action-menu.js");

;eval("define(\"code-test-bot-app/views/submissions/index\", \n  [\"code-test-bot-app/views/foundation\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var FoundationView = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = FoundationView.extend();\n  });//# sourceURL=code-test-bot-app/views/submissions/index.js");
